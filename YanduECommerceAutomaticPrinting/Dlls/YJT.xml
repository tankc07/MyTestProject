<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YJT</name>
    </assembly>
    <members>
        <member name="T:YJT.ALiYunService.ClassPhoneMessage">
            <summary>
            阿里云手机短信功能
            </summary>
        </member>
        <member name="P:YJT.ALiYunService.ClassPhoneMessage.AccessKeyId">
            <summary>
            阿里云申请AccessKeyId
            </summary>
        </member>
        <member name="P:YJT.ALiYunService.ClassPhoneMessage.AccessKeySecret">
            <summary>
            阿里云申请的accessSecret;
            </summary>
        </member>
        <member name="P:YJT.ALiYunService.ClassPhoneMessage.SingName">
            <summary>
            阿里云申请时候注册的签名名称,比如"小程序的名"
            </summary>
        </member>
        <member name="M:YJT.ALiYunService.ClassPhoneMessage.Init(System.String,System.String,System.String,System.String)">
            <summary>
            构造一个阿里云短信服务,tag唯一标记,如果曾经定义过,并且没有释放,则直接返回这个对象
            </summary>
            <param name="tag">唯一标记</param>
            <param name="accessKeyId">阿里云申请的accesskeyid</param>
            <param name="accessKeySecret">阿里云申请的accesskeySecret</param>
            <param name="singName">阿里云申请的签名</param>
            <returns></returns>
        </member>
        <member name="M:YJT.ALiYunService.ClassPhoneMessage.FunBoolSendTemplateMessage(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            向一个手机发送一个模板消息,调用前先赋值AccessKeyId,AccessKeySecret,SingName
            </summary>
            <param name="contents">发送的内容,键值对对象参考code="0123"</param>
            <param name="phoneNumber">手机号码</param>
            <param name="templateNo">消息模板名参考SMS_150577641</param>
            <param name="outId">相关单据编号自定义</param>
            <returns>发送成功TRUE,失败false</returns>
        </member>
        <member name="T:YJT.BaiduService.VoiceHandle">
            <summary>
            语音相关技术,现在仅语音合成
            </summary>
        </member>
        <member name="M:YJT.BaiduService.VoiceHandle.Init(System.String,System.String,System.String)">
            <summary>
            初始化
            </summary>
            <param name="appId"></param>
            <param name="appKey"></param>
            <param name="secretKey"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.BaiduService.VoiceHandle.ChangeMain(System.Int32)">
            <summary>
            改变人声
            </summary>
            <param name="mainNo"></param>
        </member>
        <member name="M:YJT.BaiduService.VoiceHandle.GetTxtToMp3(System.String)">
            <summary>
            返回MP3的二进制
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.BaiduService.UrlHandle">
            <summary>
            网址处理,现在只包含url短网址生成
            </summary>
        </member>
        <member name="M:YJT.BaiduService.UrlHandle.ShortUrlCreate(System.String,System.String,System.Boolean@)">
            <summary>
            生成短网址
            </summary>
            <param name="url"></param>
            <param name="token">f87d79ef832b658282fb2fefb7c2b908</param>
            <param name="isok">是否执行成功,如果返回false,结果都为"原因"</param>
            <returns></returns>
        </member>
        <member name="T:YJT.BaiduService.BaiduMap.GetAddressDetalRes">
            <summary>
            返回根据经纬度获取的结果
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Result.formatted_address">
            <summary>
            完整地址"河北省保定市莲池区长城北大街"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Result.business">
            <summary>
            附近企业 "华电二校,五四路"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Addresscomponent.country">
            <summary>
            国家 "中国"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Addresscomponent.province">
            <summary>
            省 "河北省"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Addresscomponent.city">
            <summary>
            市 "保定市"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Addresscomponent.district">
            <summary>
            区 "莲池区"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.Addresscomponent.street">
            <summary>
            街道 "长城北大街"
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.status">
            <summary>
            状态,0为成功
            </summary>
        </member>
        <member name="P:YJT.BaiduService.BaiduMap.GetAddressDetalRes.result">
            <summary>
            详细信息
            </summary>
        </member>
        <member name="F:YJT.BaiduService.BaiduMap.AccessKey">
            <summary>
            百度地图的AK,每次访问都是用此值,如需变化,直接更改
            </summary>
        </member>
        <member name="M:YJT.BaiduService.BaiduMap.GetAddressDetal(System.Decimal,System.Decimal,System.String@,System.Int32@,System.Boolean@)">
            <summary>
            根据经纬度返回地址信息
            </summary>
            <param name="lat"></param>
            <param name="lng"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="isOk"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.BaiduService.BaiduMap.GetAddressDetalByAddr(System.String,System.String@,System.Int32@,System.Boolean@)">
            <summary>
            根据地址信息,返回地址的详细信息
            </summary>
            <param name="addr"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="isOk"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.BarCode.QR">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.BarCode.QR.FunStrDistinguish(System.IO.Stream,System.Boolean@,System.String@,System.String)">
            <summary>
            识别图片流中的二维码,返回字符串
            </summary>
            <param name="imgStream"></param>
            <param name="isok"></param>
            <param name="errorMsg"></param>
            <param name="encodingName">使用的编码,默认UTF-8,空表示用系统自定的</param>
            <returns></returns>
        </member>
        <member name="M:YJT.BarCode.QR.FunImgGetQr(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="encodingName"></param>
            <param name="psize">非标准宽度,默认150PX</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Chat.TuLing图灵">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Chat.TuLing图灵.Init(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="apiKey"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Chat.TuLing图灵.CreateAskClass(YJT.Chat.TuLing图灵.reqType_enum,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建请求的的对象
            </summary>
            <param name="type">本次类型</param>
            <param name="chatText">聊天内容</param>
            <param name="imageUrl">发送的图片url</param>
            <param name="mediaUrl">发送的音频url</param>
            <param name="cCity">市</param>
            <param name="cProvince">省</param>
            <param name="cStreet">街</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Chat.TuLing图灵.GetChat(YJT.Chat.TuLing图灵.AskMainClass)">
            <summary>
            
            </summary>
            <param name="ask"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass">
            <summary>
            请求类
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass.reqType">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass.perception">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass.userInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.reqType_enum">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Chat.TuLing图灵.reqType_enum.文本">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Chat.TuLing图灵.reqType_enum.图片">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Chat.TuLing图灵.reqType_enum.音频">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception.inputText">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception.inputImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception.inputMedia">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception.selfInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputText">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputText.text">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputImage.url">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputMedia">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_InputMedia.url">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo.location">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo_Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo_Location.city">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo_Location.province">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_Perception_SelfInfo_Location.street">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.Chat.TuLing图灵.AskMainClass_UserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_UserInfo.apiKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Chat.TuLing图灵.AskMainClass_UserInfo.userId">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.DrawPen.ColorToHex(System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            color 转换hex
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DrawPen.HexToColor(System.String)">
            <summary>
            hex转换到color
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.HardControl.ComPort.BaudRate">
            <summary>
            串口波特率,9600
            </summary>
        </member>
        <member name="M:YJT.HardControl.ComPort.Init(System.String,System.Int32,System.Int32,System.IO.Ports.StopBits,System.IO.Ports.Parity)">
            <summary>
            创建一个Com连接
            </summary>
            <param name="comName">com口名称,COM4</param>
            <param name="baudRate">波特率,9600</param>
            <param name="dataBits">数据位长度8</param>
            <param name="stopBits">停止位数</param>
            <param name="parity">奇偶检查协议</param>
            <returns></returns>
        </member>
        <member name="T:YJT.ConfigTxt.IniFile">
            <summary>
            处理自定义的文件
            </summary>
        </member>
        <member name="M:YJT.ConfigTxt.IniFile.FunStrGetNodeValue(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            直接从文本中获取内容格式为 *aaa*=asdf;
            </summary>
            <param name="filePath"></param>
            <param name="key"></param>
            <param name="isCreateFile">如果文件不存在,是否创建</param>
            <param name="isCreateKey">如果key不存在是否创建</param>
            <param name="nullVal">如果没有此key,返回的默认值并设置此值</param>
            <returns></returns>
        </member>
        <member name="T:YJT.ConfigTxt.AppConfigFIle">
            <summary>
            处理App.Config文件
            </summary>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.AddItem(System.String,System.String)">
            <summary>
            向配置文件中增加
            </summary>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.ExistsItem(System.String)">
            <summary>
            判断某个KEY是否存在
            </summary>
            <param name="keyName">完全匹配的键值</param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.GetValue(System.String)">
            <summary>
            根据键值,获取配置的值
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.GetValueEX(System.String,System.String,System.Boolean)">
            <summary>
            根据键值,获取配置的值EX
            </summary>
            <param name="keyName"></param>
            <param name="isCreate">如果键值不存在,则创建,用nullValue填充</param>
            <param name="NullValue">如果不存在,则返回该值</param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.GetValues(System.String)">
            <summary>
            获取一组,以XX开头的配置信息,返回具体的内容
            </summary>
            <param name="likeName"></param>
            <returns>键值对形式,key=value</returns>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.ModifyItem(System.String,System.String)">
            <summary>
            修改某个节点
            </summary>
            <param name="keyName"></param>
            <param name="newKeyValue"></param>
        </member>
        <member name="M:YJT.ConfigTxt.AppConfigFIle.DeleteItem(System.String)">
            <summary>
            删除某个节点配置信息
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.ConfigTxt.WebConfigFile">
            <summary>
            处理Web.Config文件
            </summary>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.ExistsItem(System.String)">
            <summary>
            判断某个KEY是否存在
            </summary>
            <param name="keyName">完全匹配的键值</param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.AddItem(System.String,System.String)">
            <summary>
            向配置文件中增加
            </summary>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.GetValue(System.String)">
            <summary>
            根据键值,获取配置的值
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.GetValueEX(System.String,System.String,System.Boolean)">
            <summary>
            根据键值,获取配置的值EX
            </summary>
            <param name="keyName"></param>
            <param name="isCreate">如果键值不存在,则创建,用nullValue填充</param>
            <param name="NullValue">如果不存在,则返回该值</param>
            <returns></returns>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.GetValues(System.String)">
            <summary>
            获取一组,以XX开头的配置信息,返回具体的内容
            </summary>
            <param name="likeName"></param>
            <returns>键值对形式,key=value</returns>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.ModifyItem(System.String,System.String)">
            <summary>
            修改某个节点
            </summary>
            <param name="keyName"></param>
            <param name="newKeyValue"></param>
        </member>
        <member name="M:YJT.ConfigTxt.WebConfigFile.DeleteItem(System.String)">
            <summary>
            删除某个节点配置信息
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.DataBase.DbHelperSqlServer">
            <summary>
            数据库连接抽象对象
            </summary>
        </member>
        <member name="P:YJT.DataBase.DbHelperSqlServer.CommandTimeOut">
            <summary>
            设置执行命令时候的超时时间,默认30
            </summary>
        </member>
        <member name="P:YJT.DataBase.DbHelperSqlServer.GetDbParaEscapeChar">
            <summary>
            返回一个字符,对应本实例在提交参数的前缀
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.GetDBhParas(System.String,System.Object,System.Type,System.Int32,System.Data.ParameterDirection)">
            <summary>
            返回一个参数对象,已经实现string,StringBuilder,int,double,byte[],long,bool,datetime,如果接收返回值,需要改变参数的方向,从参数对象中获取
            </summary>
            <param name="keyName"></param>
            <param name="value"></param>
            <param name="dbtype"></param>
            <param name="length"></param>
            <param name="paraDire"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.DataBase.DbHelperSqlServer.GetSerPoint">
            <summary>
            返回当前实例连接对象服务器的端口
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.VerificationConn(System.String)">
            <summary>
            验证服务器是否可连接,仅通过conn判断
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造一个sqlserver服务器的ado对象
            </summary>
            <param name="serverIP"></param>
            <param name="dbName"></param>
            <param name="UserID"></param>
            <param name="Pwd"></param>
            <param name="serPoint"></param>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.#ctor(System.String)">
            <summary>
            直接连接本地SQL数据库
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.BuildConnStr(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            静态返回一个连接字符串,通过islocal返回是否连接本地还是远程
            </summary>
            <param name="serverIP"></param>
            <param name="dbName"></param>
            <param name="UserID"></param>
            <param name="Pwd"></param>
            <param name="serPoint"></param>
            <param name="isLocal"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.Finalize">
            <summary>
            析构对象,不调用
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.Dispose">
            <summary>
            释放对象,不调用,
            </summary>
            <returns></returns>
        </member>
        <member name="P:YJT.DataBase.DbHelperSqlServer.ExecuteNonQueryEnableTran">
            <summary>
            结束一个事务,可放弃事务或提交事务,返回 -1 已经启动事务,需要做终止  0 不需要终止,事务没有启动,设置,0 提交事务 其他为放弃事务
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteNonQueryEnableTranMultiple(System.String,System.Int32,System.Boolean)">
            <summary>
            在多事务多连接方式中启用的事务进行提交或回滚
            </summary>
            <param name="key"></param>
            <param name="val">0为提交,查询时候忽略此参数</param>
            <param name="commit">指明是否提交还是查询</param>
            <returns>-1需要提交,</returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteNonQuery(System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Boolean,System.Boolean,System.String)">
            <summary>
            执行语句,此中包含调用存储过程返回值示例
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="commandType"></param>
            <param name="isTran"></param>
            <param name="enableMultipleConn">启用多conn</param>
            <param name="connKey">如果带事务的多连接方式,就需要指定这个事务的名字,用于管理当前事务的执行情况</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteReader(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            执行语句,返回一个reader对象
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteScalar(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            执行语句,返回语句执行的首行首列
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行返回dataset对象,如果调用存储过程,可获取多张返回的表
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.ExecuteToDataTable(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            返回一个datatab对象
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="enableMultipleConn">是否启用多链接方式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.CloseConn">
            <summary>
            关闭当前连接,不调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperSqlServer.OpenConn">
            <summary>
            打开连接不调用
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.DataBase.SqlDependencyDbHelper">
            <summary>
            SQL数据库监听对象
            </summary>
        </member>
        <member name="M:YJT.DataBase.SqlDependencyDbHelper.#ctor(YJT.DataBase.DbHelperSqlServer)">
            <summary>
            
            </summary>
            <param name="dbh"></param>
        </member>
        <member name="F:YJT.DataBase.SqlDependencyDbHelper.changeDelegate">
            <summary>
            监听后触发的委托方法
            </summary>
        </member>
        <member name="T:YJT.DataBase.DbHelper">
            <summary>
            全局数据库帮助类
            </summary>
        </member>
        <member name="P:YJT.DataBase.DbHelper.GetConnState">
            <summary>
            获取当前连接对象的状态
            </summary>
        </member>
        <member name="P:YJT.DataBase.DbHelper.CommandTimeOut">
            <summary>
            设置执行command时候等待的超时秒数
            </summary>
        </member>
        <member name="F:YJT.DataBase.DbHelper._sqlConnStr">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelper.#ctor(System.String)">
            <summary>
            构造方法,现阶段仅吧连接字符串保存一下
            </summary>
            <param name="connStr"></param>
        </member>
        <member name="P:YJT.DataBase.DbHelper.GetDbParaEscapeChar">
            <summary>
            获取当前数据库所支持参数的转义字符,如sqlserver返回"@"
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelper.GetDBhParas(System.String,System.Object,System.Type,System.Int32,System.Data.ParameterDirection)">
            <summary>
            返回一个数据库参数的转义字符
            </summary>
            <param name="keyName"></param>
            <param name="value"></param>
            <param name="dbtype"></param>
            <param name="length"></param>
            <param name="paraDire"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.DataBase.DbHelper.SqlConnStr">
            <summary>
            返回或设置数据库连接对象的连接字符串
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelper.OpenConn">
            <summary>
            打开数据库连接对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.CloseConn">
            <summary>
            关闭数据库连接对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.ExecuteNonQuery(System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Boolean,System.Boolean,System.String)">
            <summary>
            执行语句,此中包含调用存储过程返回值示例,使用事务,会增加独占锁,特别注意,解锁
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="commandType"></param>
            <param name="isTran">是否启用事务方式</param>
            <param name="enableMultipleConn">是否启用多链接,如果启用,则必须传连接池的名字</param>
            <param name="connKey">连接池的名字</param>
            <returns></returns>
        </member>
        <member name="P:YJT.DataBase.DbHelper.ExecuteNonQueryEnableTran">
            <summary>
            返回 -1 已经启动事务,需要做终止  0 不需要终止,事务没有启动,设置,0 提交事务 其他为放弃事务
            </summary>
        </member>
        <member name="M:YJT.DataBase.DbHelper.ExecuteNonQueryEnableTranMultiple(System.String,System.Int32,System.Boolean)">
            <summary>
            提交或返回多连接的的事务,返回0 不需要终止,-1 需要终止, 提交0 提交事务,其他回滚事务;
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="commit"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.ExecuteReader(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            执行获取指令返回结果的reader对象,
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="enableMultipleConn"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.ExecuteScalar(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            执行指令返回的首行首列
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="enableMultipleConn"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.ExecuteToDataTable(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            返回一个表
            </summary>
            <param name="sqlStr"></param>
            <param name="paras"></param>
            <param name="enableMultipleConn">是否启用多连接方式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelper.FormatSqlStr(System.String)">
            <summary>
            格式化字符串,把,回车,换行,双空格,都格式化成为一个空格
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.DbHelperAccess.ExecuteReader(System.String,System.Data.Common.DbParameter[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="sqlStr"></param>
            <param name="paras">可以为null</param>
            <returns>System.Data.OleDb.OleDbDataReader返回</returns>
        </member>
        <member name="T:YJT.DataBase.Common">
            <summary>
            数据库相关工具
            </summary>
        </member>
        <member name="M:YJT.DataBase.Common.IsNotDbNull(System.Object)">
            <summary>
            判断object对象是否为数据库null值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.Common.ObjectTryToObj``1(System.Object,``0)">
            <summary>
            用于数据库取回的数据自动格式化成对应的类型,如果是null,则返回默认值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.Common.ObjectTryToString(System.Object,System.Boolean,System.String)">
            <summary>
            对OBJECT对象转换为字符串
            </summary>
            <param name="obj">数据库返回的对象</param>
            <param name="isForce">是否强制转换null</param>
            <param name="nullValue">强制转换返回的内容</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DataBase.Common.ConvertStringValue(System.String,YJT.DataBase.Common.ConvertType,System.Int32,System.String,System.Boolean,YJT.DataBase.Common.DbType)">
            <summary>
            把数据转换成sql拼接的参数值
            </summary>
            <param name="value">要转换的参数</param>
            <param name="ct">要转换的类型改,二进制不处理</param>
            <param name="fdjd">0表示标准输出,其他则按固定取值</param>
            <param name="defValue">不可转换的默认值</param>
            <param name="isShortDate">日期是否只保留到日</param>
            <param name="dbtype">决定转换日期时候所使用不同数据库的方法</param>
            <returns></returns>
        </member>
        <member name="T:YJT.DataTableHandle.BindingCollection`1">
            <summary>
            用于对list对象填充到DataGridView中进行排序
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:YJT.DataTableHandle.BindingCollection`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YJT.DataTableHandle.BindingCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            构造函数
            </summary>
            <param name="list">IList类型的列表对象</param>
        </member>
        <member name="M:YJT.DataTableHandle.BindingCollection`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            自定义排序操作
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="P:YJT.DataTableHandle.BindingCollection`1.IsSortedCore">
            <summary>
            获取一个值，指示列表是否已排序
            </summary>
        </member>
        <member name="P:YJT.DataTableHandle.BindingCollection`1.SupportsSortingCore">
            <summary>
            获取一个值，指示列表是否支持排序
            </summary>
        </member>
        <member name="P:YJT.DataTableHandle.BindingCollection`1.SortDirectionCore">
            <summary>
            获取一个只，指定类别排序方向
            </summary>
        </member>
        <member name="P:YJT.DataTableHandle.BindingCollection`1.SortPropertyCore">
            <summary>
            获取排序属性说明符
            </summary>
        </member>
        <member name="M:YJT.DataTableHandle.BindingCollection`1.RemoveSortCore">
            <summary>
            移除默认实现的排序
            </summary>
        </member>
        <member name="T:YJT.DataTableHandle.CanSort`1">
            <summary>
            一个排序对象,用于排序对比时候的操作类,无需手工使用
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:YJT.DataTableHandle.ListToClass">
            <summary>
            可以处理list范型
            </summary>
        </member>
        <member name="M:YJT.DataTableHandle.ListToClass.ToDataTable``1(System.Collections.Generic.List{``0})">
            <summary>
            list t 转换为 datatable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.DataTableHandle.DataTableTool">
            <summary>
            对DataTable对象一些额外的操作
            </summary>
        </member>
        <member name="M:YJT.DataTableHandle.DataTableTool.ReplaceFieldName(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            修改dataTable的字段为某某字段
            </summary>
            <param name="table"></param>
            <param name="dic">key表示要替换的字段名,value表示替换成的字段名</param>
            <returns>替换的个数</returns>
        </member>
        <member name="M:YJT.DataTableHandle.DataTableTool.GetColumnNumByFieldsName(System.Data.DataColumnCollection,System.String,System.Boolean,System.String)">
            <summary>
            通过指定一个名称,从表中寻找对应的列
            </summary>
            <param name="columns">table对应的列头</param>
            <param name="fieldsname">要找到的对应标题名,不区分大小写</param>
            <param name="isFullMatch">是否完全匹配</param>
            <param name="likeChar">匹配时候,所用的特殊标记</param>
            <returns>返回对应标题的列号码</returns>
        </member>
        <member name="T:YJT.DateTimeHandle.DateConvert">
            <summary>
            日期转换相关
            </summary>
        </member>
        <member name="M:YJT.DateTimeHandle.DateConvert.GetDatetimeString(System.Int32,System.DateTime)">
            <summary>
            获取日期字符串1yyyyMMdd,2yyymmmddhhmmss,3yyymmddhhmmssff
            </summary>
            <param name="dt"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.DateTimeHandle.DateConvert.GetUtcTimeStampNow(System.String)">
            <summary>
            返回utc的当前时间戳,微信可用sec,其他msec
            </summary>
            <param name="t">sec,msec</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DateTimeHandle.DateConvert.GetTimeStamp(System.DateTime,System.String,System.String)">
            <summary>
            返回指定日期的总秒数second
            </summary>
            <param name="dt1"></param>
            <param name="type">utc local</param>
            <param name="t">sec 精确到秒,msec 精确到毫秒,其他均为秒</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DateTimeHandle.DateConvert.GetDateTime(System.Int64,System.String,System.String)">
            <summary>
            根据时间戳,返回对应的时间second
            </summary>
            <param name="timeStamp"></param>
            <param name="type"></param>
            <param name="t">sec 精确到秒,msec 精确到毫秒,其他均为秒</param>
            <returns></returns> 
        </member>
        <member name="T:YJT.DateTimeHandle.DateCalc">
            <summary>
            日期计算相关
            </summary>
        </member>
        <member name="M:YJT.DateTimeHandle.DateCalc.GetTimeDifference(System.DateTime,System.DateTime)">
            <summary>
            计算两个时间差距(大概的时间)
            </summary>
            <param name="NowTime">a</param>
            <param name="beforeDate">b</param>
            <returns></returns>
        </member>
        <member name="M:YJT.DateTimeHandle.DateCalc.CalcDataPar(System.DateTime,System.DateTime,System.Int32,System.Int32@,System.Int32)">
            <summary>
            计算两个日期之间固定时间段的分组
            </summary>
            <param name="s">起始日期</param>
            <param name="e">结束日期</param>
            <param name="days">相差天数</param>
            <param name="countDays">共计相差天数</param>
            <param name="interval">每次计算累曾单位</param>
            <returns>返回期间按相差天数的阶段列表</returns>
        </member>
        <member name="T:YJT.Debug">
            <summary>
            调试相关类
            </summary>
        </member>
        <member name="P:YJT.Debug.AttBoolEnableFileLog">
            <summary>
            全局设置是否启用debug的功能
            </summary>
        </member>
        <member name="M:YJT.Debug.FunVoidLogWriteText(System.Object,System.String,System.Boolean,System.Object[])">
            <summary>
            将日志写入文件
            </summary>
            <param name="context"></param>
            <param name="path"></param>
            <param name="enableDate">自动输出日期</param>
            <param name="para">自动累加输出的参数</param>
        </member>
        <member name="M:YJT.Debug.FunVoidWriteVSDebugOutStr(System.String)">
            <summary>
            在VS调试器中输出错误信息
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:YJT.Encrypt.MySelfAlgorithm.TextAlgorithm">
            <summary>
            有关字符串操作的
            </summary>
        </member>
        <member name="M:YJT.Encrypt.MySelfAlgorithm.TextAlgorithm.Init">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.MySelfAlgorithm.TextAlgorithm.FunStrEncryptionInCharacterOccurrence(System.String)">
            <summary>
            按字符出现的顺序进行加密
            </summary>
            <param name="str1"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.MySelfAlgorithm.mySing.StringSign(System.String)">
            <summary>
            简单的字符串验签,用于在多模式下验证请求是否是服务器发送的
            </summary>
            <param name="oldstr"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Encrypt.MD5Encrypt.EncryptMd5File">
            <summary>
            相关文件的MD5操作
            </summary>
        </member>
        <member name="T:YJT.Encrypt.MD5Encrypt.EncryptMd5Str">
            <summary>
            相关字符串的MD5操作
            </summary>
        </member>
        <member name="M:YJT.Encrypt.MD5Encrypt.EncryptMd5Str.Init">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.MD5Encrypt.EncryptMd5Str.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Encrypt.MD5Encrypt.EncryptMd5Str.FunStrGetHashString(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            返回小写两位MD5密文
            </summary>
            <param name="Plaintext">要加密的文本</param>
            <param name="encryCount">加密次数</param>
            <param name="encoding"></param>
            <param name="isUpper"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Encrypt.SHAEncrypt.EncryptSHA1Str">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA1Str.Init">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA1Str.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA1Str.FunStrGetSHA1HashString(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="Plaintext"></param>
            <param name="encryCount"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA1Str.FunStrGetSHA1StringAdv(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            获取SHA1高级
            </summary>
            <param name="plaintext"></param>
            <param name="encryCount"></param>
            <param name="encoding"></param>
            <param name="isUpper"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA256Str.FunStrGetSHA256StringAdv(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            创建密文
            </summary>
            <param name="plaintext"></param>
            <param name="encryCount"></param>
            <param name="encoding"></param>
            <param name="isUpper"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA256Str.FunByteGetSHA256StringAdv(System.String,System.String)">
            <summary>
            创建密文byte
            </summary>
            <param name="plaintext"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA512Str.FunStrGetSHA512StringAdv(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            创建密文
            </summary>
            <param name="plaintext"></param>
            <param name="encryCount"></param>
            <param name="encoding"></param>
            <param name="isUpper"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.SHAEncrypt.EncryptSHA512Str.FunByteGetSHA512StringAdv(System.String,System.String)">
            <summary>
            创建密文byte
            </summary>
            <param name="plaintext"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.AESEncrypt.EncryptAesStr.GetAesKey(System.String,System.Char)">
            <summary>
            AesKey要求32位
            </summary>
            <param name="key"></param>
            <param name="supplementaryChar">当字符数量不足,在字符串右面补充的字符</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.AESEncrypt.EncryptAesStr.FunStrGetAesEncrypt(System.String,System.String,System.Char)">
            <summary>
            进行Aes加密
            </summary>
            <param name="plaintext">明文</param>
            <param name="strKey">32位密钥,不足自动补充0</param>
            <param name="supplementaryChar">当字符数量不足,在字符串右面补充的字符</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.AESEncrypt.EncryptAesStr.FunStrGetAesUnEncrypt(System.String,System.String,System.Char)">
            <summary>
            进行Aes解密
            </summary>
            <param name="ciphertext">密文</param>
            <param name="strKey">32位密钥,不足自动补充0</param>
            <param name="supplementaryChar">当字符数量不足,在字符串右面补充的字符</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Encrypt.DESEncrypt.EncryptDesStr">
            <summary>
            标准des加密
            </summary>
        </member>
        <member name="F:YJT.Encrypt.DESEncrypt.EncryptDesStr._defaultDesIv">
            <summary>
            默认DESiv
            </summary>
        </member>
        <member name="P:YJT.Encrypt.DESEncrypt.EncryptDesStr.IvBuffer">
            <summary>
            获取IVbuffer
            </summary>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDesStr.#ctor(System.Int32)">
            <summary>
            构造对象
            </summary>
            <param name="ivLength"></param>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDesStr.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDesStr.FunByteArrGetIV(System.Byte[])">
            <summary>
            创建IV向量,如果指定byte数组,则直接赋值,否则随机生成,在声明后对象,应当先调用此方法来创建向量默认值,不设置向量则用默认向量
            </summary>
            <param name="ivBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDesStr.FunStrGetDes(System.String,System.String,System.Char)">
            <summary>
            获取Des加密
            </summary>
            <param name="plaintext"></param>
            <param name="strKey"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDesStr.FunStrGetUnDes(System.String,System.String,System.Char)">
            <summary>
            获取des解密
            </summary>
            <param name="cipherText"></param>
            <param name="strKey"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Encrypt.DESEncrypt.EncryptDes3Str">
            <summary>
            DES加密
            </summary>
        </member>
        <member name="F:YJT.Encrypt.DESEncrypt.EncryptDes3Str._defaultDesIv">
            <summary>
            默认DESiv值
            </summary>
        </member>
        <member name="M:YJT.Encrypt.DESEncrypt.EncryptDes3Str.Finalize">
            <summary>
            析构
            </summary>
        </member>
        <member name="T:YJT.Encrypt.RSAEncrypt.EncryptRsaStr">
            <summary>
            c#默认自带的RSA加密算法
            </summary>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaStr.FunStrArrCreatePublicAndPrivateKey(System.Int32)">
            <summary>
            创建私钥和公钥,0为私钥[解密],1为公钥[加密]
            </summary>
            <param name="dwKeySize">默认为1024的密钥长度</param>
            <returns>0为私钥[解密],1为公钥[加密]</returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaStr.FunStrGetRsa(System.String,System.String)">
            <summary>
             用公钥加密数据
            </summary>
            <param name="publicKey">公钥</param>
            <param name="str">要加密的字符串明文</param>
            <returns>返回加密的Base64字符串密文</returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaStr.FunStrGetUnRsa(System.String,System.String)">
            <summary>
            用私钥解密
            </summary>
            <param name="privateKey">私钥</param>
            <param name="cipherText">Base64密文</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaStr.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaStr.Finalize">
            <summary>
            析构
            </summary>
        </member>
        <member name="T:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr">
            <summary>
            第三方RSA加密
            </summary>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.SignDataWithPcks12(System.String,System.String,System.Byte[],System.String)">
            <summary>
            签名
            </summary>
            <param name="p12Cert">P12/PFX证书的 base64格式</param>
            <param name="certPwd">证书密码</param>
            <param name="contentData">要签名的数据</param>
            <param name="signAlgorithm">签名算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.SignDataWithPcks12(System.Byte[],System.Char[],System.Byte[],System.String)">
            <summary>
            签名
            </summary>
            <param name="p12CertData">P12/PFX证书</param>
            <param name="certPwdData">证书密码</param>
            <param name="contentData">要签名的数据</param>
            <param name="signAlgorithm">签名算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.VerifyDataWithX509(System.String,System.Byte[],System.String,System.String)">
            <summary>
            验签
            </summary>
            <param name="x509Cert">x509通用证书base64格式</param>
            <param name="content">原始数据</param>
            <param name="sign">签名结果base64格式</param>
            <param name="signAlgorithm">签名算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.VerifyDataWithX509(System.Byte[],System.Byte[],System.Byte[],System.String)">
            <summary>
            验签
            </summary>
            <param name="x509CertData">x509通用证书</param>
            <param name="contentData">原始数据</param>
            <param name="signData">签名结果</param>
            <param name="signAlgorithm">签名算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPrivateKeyFromPcks12(System.String,System.String)">
            <summary>
            获取RSA私钥
            </summary>
            <param name="p12Cert">P12/PFX证书的 base64格式</param>
            <param name="certPwd">证书密码</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPrivateKeyFromPcks12(System.Byte[],System.Char[])">
            <summary>
            获取RSA私钥
            </summary>
            <param name="p12CertData">P12/PFX证书</param>
            <param name="certPwdData">证书密码</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPublicKeyFromPcks12(System.String,System.String)">
            <summary>
            获取RSA公钥
            </summary>
            <param name="p12Cert">P12/PFX证书的 base64格式</param>
            <param name="certPwd">证书密码</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPublicKeyFromPcks12(System.Byte[],System.Char[])">
            <summary>
            获取RSA公钥
            </summary>
            <param name="p12CertData">P12/PFX证书</param>
            <param name="certPwdData">证书密码</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPublicKeyFromX509(System.String)">
            <summary>
            获取RSA公钥
            </summary>
            <param name="x509Cert">x509通用证书base64格式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetPublicKeyFromX509(System.Byte[])">
            <summary>
            获取RSA公钥
            </summary>
            <param name="x509CertData">x509通用证书</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithX509(System.String,System.Byte[],System.String)">
            <summary>
            公钥加密
            </summary>
            <param name="x509Cert">x509通用证书base64格式</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithX509(System.Byte[],System.Byte[],System.String)">
            <summary>
            公钥加密
            </summary>
            <param name="x509CertData">x509通用证书</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithPublicKey(System.String,System.Byte[],System.String)">
            <summary>
            公钥加密
            </summary>
            <param name="publicKey">RSA公钥 base64格式</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithPublicKey(System.Byte[],System.Byte[],System.String)">
            <summary>
            公钥加密
            </summary>
            <param name="publicKey">RSA公钥</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPcks12(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="p12Cert">P12/PFX证书的 base64格式</param>
            <param name="certPwd">证书密码</param>
            <param name="content">待解密数据 base64格式</param>
            <param name="encoding">解密出来的数据编码格式，默认UTF-8</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPcks12(System.Byte[],System.Char[],System.Byte[],System.String)">
            <summary>
            解密
            </summary>
            <param name="p12Data">P12/PFX证书</param>
            <param name="certPwdData">证书密码</param>
            <param name="contentData">待解密数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPrivateKey(System.String,System.String,System.String,System.String)">
            <summary>
            私钥解密
            </summary>
            <param name="privateKey">RSA私钥  base64格式</param>
            <param name="content">待解密数据 base64格式</param>
            <param name="encoding">解密出来的数据编码格式，默认UTF-8</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPrivateKey(System.Byte[],System.Byte[],System.String)">
            <summary>
            私钥解密
            </summary>
            <param name="privateKey">RSA私钥</param>
            <param name="contentData">待解密数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithPrivateKey(System.String,System.Byte[],System.String)">
            <summary>
            私钥加密
            </summary>
            <param name="privateKey">RSA私钥 base64格式</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.EncryptWithPrivateKey(System.Byte[],System.Byte[],System.String)">
            <summary>
            私钥加密
            </summary>
            <param name="privateKey">RSA私钥</param>
            <param name="contentData">待加密的数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPublicKey(System.String,System.String,System.String,System.String)">
            <summary>
            公钥解密
            </summary>
            <param name="publicKey">RSA公钥  base64格式</param>
            <param name="content">待解密数据 base64格式</param>
            <param name="encoding">解密出来的数据编码格式，默认UTF-8</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.DecryptWithPublicKey(System.Byte[],System.Byte[],System.String)">
            <summary>
            公钥解密
            </summary>
            <param name="publicKey">RSA公钥</param>
            <param name="contentData">待解密数据</param>
            <param name="algorithm">加密算法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GeneratePFX(System.String,System.Byte[],System.Byte[],System.Byte[],System.String)">
            <summary>
            根据crt以及RSA私钥生成pfx证书
            </summary>
            <param name="passWord">证书密码</param>
            <param name="x509CertData">crt证书</param>
            <param name="privateKey">Rsa私钥</param>
            <param name="x509CertChainData">证书链</param>
            <param name="alias">默认别名</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Encrypt.RSAEncrypt.EncryptRsaBCStr.GetX509CertificateEntry(System.Byte[])">
            <summary>
            根据证书二进制数组,获取x509证书的对象
            </summary>
            <param name="certData"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Encrypt.Common">
            <summary>
            单例,工具类
            </summary>
        </member>
        <member name="M:YJT.Encrypt.Common.FunStrGetRandChar(System.Int32)">
            <summary>
            使用MD5生成随机字符串,
            </summary>
            <param name="length">指定的长度</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Excel">
            <summary>
            操作Excel的类
            </summary>
        </member>
        <member name="M:YJT.Excel.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            
        </member>
        <member name="M:YJT.Excel.#ctor">
            <summary>
            构造一个excel对象,主要解决通过datatable Buil Excel objects
            </summary>
        </member>
        <member name="M:YJT.Excel.GetSheetNames">
            <summary>
            返回Excel中所有的Sheet名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.FindSheet(System.String)">
            <summary>
            设置当前对象的工作表为xxx表
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.GetRowCount">
            <summary>
            获取对应表的总行数
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.SheetToDataTable(System.Boolean,System.Action{System.Int32,System.Int32,System.Data.DataTable},System.Boolean)">
            <summary>
            把sheet表,转换成datatable对象
            </summary>
            <param name="isTitle">首行是否为标题,</param>
            <param name="action">p1:共计行数,p2:当前处理行,p3:为null时候,处理中</param>
            <param name="isAsync">是否启用线程方式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.getCell(System.Int32,System.Int32)">
            <summary>
            获取某个单元格
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.SetCell(System.Int32,System.Int32,System.String)">
            <summary>
            设置单元格
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.Excel.IsComplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Excel._countLines">
            <summary>
            需要导出的总行数
            </summary>
        </member>
        <member name="P:YJT.Excel.CountLines">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Excel._CountColumn">
            <summary>
            需要导出的总列数
            </summary>
        </member>
        <member name="F:YJT.Excel._isAbortExec">
            <summary>
            是否终止线程执行
            </summary>
        </member>
        <member name="F:YJT.Excel._currentWriteLines">
            <summary>
            当前写入了的行数
            </summary>
        </member>
        <member name="P:YJT.Excel.CurrentWriteLines">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Excel.ExportExcelStreamByDataTable(System.Data.DataTable)">
            <summary>
            通过datatable 返回stream对象
            </summary>
            <param name="sourceData"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Excel.ExportExcelForDataTable(System.Data.DataTable,System.String)">
            <summary>
            通过datatable生成excel对象
            </summary>
            <param name="sourceData"></param>
            <param name="outFileName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.GetFileList(System.String,System.Text.Encoding)">
            <summary>
            获取文件夹中的所有文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:YJT.Ftp.ExistDirectory(System.String)">
            <summary>
            判断指定的路径是否在服务器上存在
            </summary>
            <param name="path">test3/test4</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.DownloadFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="serFilePath">test3/test4/newName.mp4</param>
            <param name="localFilePath">d:\downFile.mp4</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.ExistFile(System.String)">
            <summary>
            
            </summary>
            <param name="path">test3/test4/newName.mp4</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.UpLoadFile(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path">test3/test4</param>
            <param name="localFile">D:\games\other\2\有\A1797.mp4</param>
            <param name="newName">newName</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.CreateDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="directoryPath">test3/test4</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.FileList(System.String)">
            <summary>
            获取文件夹列表
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.#ctor(System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="serverIp">172.16.7.50:8899</param>
            <param name="user">a</param>
            <param name="pwd">b</param>
        </member>
        <member name="M:YJT.Ftp.FtpDownFile(System.String,System.Func{System.Int32,System.Int64,System.Byte[],System.Int32,System.Boolean})">
            <summary>
            下载文件
            1已经获取文件大小:p2文件大小
            2文件流准备好:p2为0
            3开始传输:p2共计百分比,p3接受的数据,p4本次接收的数据长度
            4下载结束:p2=1用户放弃,p2=2下载完成
            </summary>
            <param name="path">要下载的文件如ABC/DDD/123.TXT</param>
            <param name="bc">每次获取一次数据执行的回调,如果回调返回false,则放弃下载p1状态=1获取到的文件大小,2开始下载进度百分比,p2相关值,</param>
            <returns>没有发生异常,false表示有异常</returns>
        </member>
        <member name="M:YJT.Ftp.FtpUpFile(System.String,System.String)">
            <summary>
            FTP上传文件
            </summary>
            <param name="path"></param>
            <param name="fileStream"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Ftp.FileSize(System.String)">
            <summary>
            获取文件的大小
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Html.HtmlOutString">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Html.HtmlOutString.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Html.HtmlOutString.FunAddAlert(System.String)">
            <summary>
            出现提示框;
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:YJT.Html.HtmlOutString.FunAddBorderBack(System.Int32)">
            <summary>
            浏览器历史后退或前进
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:YJT.Html.HtmlOutString.FunAddRedirectUrl(System.String,System.Boolean)">
            <summary>
            浏览器网址重定向
            </summary>
            <param name="url"></param>
            <param name="isParent">是否要求父窗体跳转</param>
        </member>
        <member name="M:YJT.Html.HtmlOutString.FunRefreshPage(System.Boolean)">
            <summary>
            刷新页面
            </summary>
            <param name="isRef">是否刷新,false表示不刷新</param>
        </member>
        <member name="M:YJT.Html.HtmlOutString.ToString">
            <summary>
            生成/script标记
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Html.HtmlOutString.Clear">
            <summary>
            清除内容
            </summary>
        </member>
        <member name="T:YJT.Html.DIYHtmlControls">
            <summary>
            用于自定义Control.Add方法所生成特定的对象
            </summary>
        </member>
        <member name="M:YJT.Html.DIYHtmlControls.#ctor(System.String)">
            <summary>
            构造一个html对象
            </summary>
            <param name="innerHTML">对象的html文本</param>
        </member>
        <member name="T:YJT.Http">
            <summary>
            相关HTTP的操作
            </summary>
        </member>
        <member name="M:YJT.Http.FunStrUrlEncode(System.String,System.String,System.Boolean)">
            <summary>
            对URL地址字符串进行编码
            </summary>
            <param name="text"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrUrlUnEncode(System.String,System.String)">
            <summary>
            对URL地址字符串进行解码
            </summary>
            <param name="text"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunXmlGetDataByInputStream(System.Web.HttpContext,System.String)">
            <summary>
            从http流数据中提取对象的Stream内容,并转换为xml对象
            </summary>
            <param name="context"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunDicGetPostPara(System.Web.HttpRequest,System.String)">
            <summary>
            获取页面中传提过来的参数,支持json内容和from内容,以,:=进行分割
            </summary>
            <param name="webRequest"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetPostPara(System.Web.HttpRequest,System.String)">
            <summary>
            获取post方式过来的data部分内容;
            </summary>
            <param name="webRequest"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetTextByGetMode(System.String,System.Boolean@,System.String)">
            <summary>
            以GET方式,获取指定的URL内容文本信息
            </summary>
            <param name="url"></param>
            <param name="isOk"></param>
            <param name="encoding">默认UTF-8</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetTextByPostMode(System.String,System.Boolean@,System.String,System.String)">
            <summary>
            以POST方式,获取指定URL内容的文本
            </summary>
            <param name="url"></param>
            <param name="isOk"></param>
            <param name="encoding"></param>
            <param name="postData">根据情况需要转层json</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.HttpUploadFile(System.String,System.Byte[],System.String)">
            <summary>
            待定删除,现在只有给微信发送临时素材功能
            </summary>
            <param name="url"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.UpLoadFile(System.String,System.String)">
            <summary>
            待定删除不要用这个功能,已经废除,现在这个只是留着而已
            </summary>
            <param name="filePath"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetTextByPostModeAndSendFile(System.String,System.Boolean@,System.Net.CookieContainer@,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            待定删除,以POST方式发送文件,值得注意的是,这个方法还不稳定,以后会针对此功能进行重封装
            </summary>
            <param name="filePath"></param>
            <param name="encoding"></param>
            <param name="url"></param>
            <param name="isOk"></param>
            <param name="cookie"></param>
            <param name="certFilePath"></param>
            <param name="certPwd"></param>
            <param name="proxyip"></param>
            <param name="proxyPort"></param>
            <param name="refererUrl"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            https的证书验证回调,此方法没有实现具体的验证内容,仅仅无条件的返回True
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunBytesGetString(System.String,System.String@,System.Boolean@,System.String,System.Net.CookieContainer@,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            字符串方式下载http或https协议的内容
            </summary>
            <param name="url"></param>
            <param name="errMsg"></param>
            <param name="IsOk"></param>
            <param name="postData"></param>
            <param name="cookie"></param>
            <param name="certFilePath"></param>
            <param name="certPwd"></param>
            <param name="proxyIp"></param>
            <param name="proxyPort"></param>
            <param name="refererUrl"></param>
            <param name="Headers"></param>
            <param name="encoding"></param>
            <param name="sendMode"></param>
            <param name="ssl"></param>
            <param name="contentType"></param>
            <param name="accept"></param>
            <param name="expect100Continue">是否启用100Continue协议验证</param>
            <param name="timeOut">超时-1为默认,可选15000</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunBytesGetBigStream(System.String,System.String@,System.Boolean@,System.Int32@,System.String,System.String,System.Net.CookieContainer@,System.String,System.String,System.Net.Security.RemoteCertificateValidationCallback,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Int32,System.Int32,System.Action{System.Int64,System.Int64,System.String},System.Boolean)">
            <summary>
            下载大文件保存为文件
            </summary>
            <param name="url">要下载的路径</param>
            <param name="errMsg">遇到错误的返回信息</param>
            <param name="isOk">本次是否下载成功</param>
            <param name="errCode">本次下载错误的代码,-2默认值,0正常完成,大于0看msg信息</param>
            <param name="postData">要发送的数据,如果是post方式则转换为byte用于发送,如果是get则路径追加</param>
            <param name="tmpFilePath">下载时候使用的临时文件,也可以是目的文件,可以是文件名或目录,如果文件存在则返回错误</param>
            <param name="autoFileName">true为文件名为获取到的名称,tmpfilePath表示目录,false则按照tmpFIlePath的指定确认</param>
            <param name="cookie">用于此次访问所使用的cookie,如果为null,则创建一个</param>
            <param name="certFilePath">此次使用证书的文件路径,如果路径不存在,证书密码则无用</param>
            <param name="certPwd">此次使用证书的密钥</param>
            <param name="certValidataCB">用于证书的验证回调,如果未指定,则不验证,总返回成功,ssl模式和证书模式使用</param>
            <param name="proxyPort">此次使用的代理服务器端口,如果为为0则表示不使用代理</param>
            <param name="proxyIp">此次使用的代理服务器IP,如果端口为0,此ip不生效</param>
            <param name="refererUrl">此次访问使用的引用页,如不指定,则不生效</param>
            <param name="headers">为此次Headers增加的集合,指定null则不生效</param>
            <param name="encoding">用于此次参数的字符串编码,如果POST方式才生效,GET方式不起作用</param>
            <param name="sendMode">POST和GET两种</param>
            <param name="ssl">本次使用的SSL版本,支持1和2两种,指定为0,则使用模式SSL方式</param>
            <param name="bufferSize">每次请求的缓存大小,默认65535大小,建议此值大些,过小可能对特殊服务器引发异常</param>
            <param name="packBC">每次获取一组数据后的回调,如果为null则不调用,文件总大小,本次下载的大小,文件路径,总大小为0则表示没有获取到总大小数据</param>
            <returns>返回下载文件的绝对路径+名</returns>
        </member>
        <member name="M:YJT.Http.FunBytesGetStream(System.String,System.String@,System.Boolean@,System.String,System.Net.CookieContainer@,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Int32,System.Int32)">
            <summary>
            二进制方式下载http或https协议的内容
            </summary>
            <param name="url"></param>
            <param name="errMsg"></param>
            <param name="IsOk"></param>
            <param name="postData"></param>
            <param name="cookie"></param>
            <param name="certFilePath"></param>
            <param name="certPwd"></param>
            <param name="proxyIp"></param>
            <param name="proxyPort"></param>
            <param name="refererUrl"></param>
            <param name="Headers"></param>
            <param name="encoding"></param>
            <param name="sendMode"></param>
            <param name="ssl"></param>
            <param name="bufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetTextByPostModeAndCert(System.String,System.Boolean@,System.String,System.Net.CookieContainer@,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            以POST方式,获取指定URL内容的文本,可以传提证书,Cookie如果cookie==null,则返回一个新的cookie,如果证书路径=="",则不使用证书访问
            </summary>
            <param name="url"></param>
            <param name="isOk">本次访问是否成功</param>
            <param name="postData">发送的数据</param>
            <param name="cookie">本次访问使用的cookie,如果为null,则创建一个新的</param>
            <param name="certFilePath">.p12类型文件,采用x.509算法的证书,如果为空,则不使用证书方式</param>
            <param name="certPwd">证书密钥</param>
            <param name="proxyip"></param>
            <param name="proxyPort"></param>
            <param name="refererUrl"></param>
            <param name="encoding">返回值得编码,以及发送数据的编码</param>
            <param name="Headers">请求的一些参数</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetTextByPostModeAndCookie(System.String,System.Boolean@,System.String,System.Net.CookieContainer@,System.String)">
            <summary>
            以POST方式,获取指定URL内容的文本 可以传提cookie,如果cooke为null,则在方法中自动生成,并返回
            </summary>
            <param name="url"></param>
            <param name="isOk"></param>
            <param name="postData"></param>
            <param name="cookie"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Http.FunStrGetUrlKeyValueJoin(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            为键值对集合生成aaa=aaa &amp; bbb="bbb"字符串用于做Get方式的桉树
            </summary>
            <param name="dic"></param>
            <param name="appendStr">结尾处追加的字符串</param>
            <param name="keyMake">一个委托用于处理每个键的名称加工处理</param>
            <param name="ValueMake">一个委托用于处理每个键的值值加工处理</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Picture.VerificationCode">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:YJT.Picture.VerificationCode.FunImageGetVerificationCode(System.String,System.Int32,System.Int32)">
            <summary>
            生成普通文字验证码
            </summary>
            <param name="code"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Picture.PictureControl">
            <summary>
            图片操作与控制
            </summary>
        </member>
        <member name="M:YJT.Picture.PictureControl.FunPicGetZoomPic(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            按比例转换图片
            格式默认,则输出JPG
            宽度或高度单个可为0,如果为0表示自动计算
            </summary>
            <param name="oldimg">要转的图片</param>
            <param name="width">指定输出图片的宽度</param>
            <param name="height">指定输出图片的高度</param>
            <param name="outPutFormat">输出图片的格式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Picture.PictureControl.FunPicGetZoomMax(System.Drawing.Image,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            规定一个数,图片的宽高均不允许超过此值,等比例放大或者缩小
            </summary>
            <param name="oldimg"></param>
            <param name="maxNum"></param>
            <param name="outPutFormat"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Json">
            <summary>
            处理json相关操作
            </summary>
        </member>
        <member name="T:YJT.Json.EnumTimeFormat">
            <summary>
            格式化时候,日期类型所使用的类型
            </summary>
        </member>
        <member name="F:YJT.Json.EnumTimeFormat.Long">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="F:YJT.Json.EnumTimeFormat.Short">
            <summary>
            yyyy-MM-dd
            </summary>
        </member>
        <member name="F:YJT.Json.EnumTimeFormat.TimeShort">
            <summary>
            HH:mm:ss
            </summary>
        </member>
        <member name="M:YJT.Json.FunStrSerializeToStr(System.Object,YJT.Json.EnumTimeFormat,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            把一个类序列化成一个JSON文本
            </summary>
            <param name="obj"></param>
            <param name="dateformat"></param>
            <param name="enumConverStr">是否把枚举转换成字符串</param>
            <param name="isFormatStr">是否把输出的字符串格式化</param>
            <param name="removeNull">是否移除对象为null的属性,xxx? 也包括</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Json.FunObjGetClassObjByJsonStr``1(System.String,System.Boolean)">
            <summary>
            把JSON字符串转换成需要的类型,无法转换会根据参数抛出异常,还是返回对象默认值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonText"></param>
            <param name="isIgnoreException">是否忽略异常,直接返回default(T)</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Json.FunStrGetTagstrByJsonKey(System.String,System.String,System.Boolean@)">
            <summary>
            获取JSON对象中的某个对象的值备注(["名"]或[名.名]),如果有同名,只会获取最后一个对象
            </summary>
            <param name="jsonStr">json字符串</param>
            <param name="keyStr">寻找的节点或路径名["名"]或[名.名]</param>
            <param name="isOk"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Json.GetJObject(System.String)">
            <summary>
            获取一个可以支持linq查询的JObject对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造CreateOrder新下单地址,ModifyOrder修改订单地址,QueryOrder查询单据地址,FilterArea订单地址可送达查询地址
            </summary>
        </member>
        <member name="T:YJT.Logistics.Debonlogistic.CreateOrderJsonClass">
            <summary>
            新下单服务接口对象
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.companyName">
            <summary>
            发货人公司,length=32,0,德邦
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.businessNetworkNo">
            <summary>
            发货部门编码,length=32,0,德邦营业部门编码，若没有同步德邦营业部门数据，可以不填
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.name">
            <summary>
            发货人名称 ,length=32,1,"AAA"
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.mobile">
            <summary>
            发货人手机,length=32,1, 180****2531
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.phone">
            <summary>
            发货人电话,length=32,0,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.province">
            <summary>
            发货人省份,length=32,1,  上海
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.city">
            <summary>
            发货人城市,length=32,1,上海市
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.county">
            <summary>
            发货人区县,length=32,1, 青浦区
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.town">
            <summary>
            发货人乡镇街道,length=32,0,  徐泾镇
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.SenderClass.address">
            <summary>
            发货人详细地址,length=256,1, 详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.toNetworkNo">
            <summary>
            到达部门编码,length=32,1,德邦营业部门编码，若没有同步德邦营业部门数据，可以不填
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.name">
            <summary>
            
            收货人名称,length=32,1,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.phone">
            <summary>
            收货人电话,length=32,0,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.mobile">
            <summary>
            收货人手机,length=32,1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.province">
            <summary>
            收货人省份,length=32,1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.city">
            <summary>
            收货人城市,length=32,1,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.county">
            <summary>
            收货人区县,length=32,1,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.town">
            <summary>
            收货人镇街道,length=32,0
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.address">
            <summary>
            收货人详细地址 ,length=256,1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.ReceiverClass.companyName">
            <summary>
            收货人公司 ,length=100,0
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.cargoName">
            <summary>
            货物名称,length=250,1, 货物名
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.totalNumber">
            <summary>
            总件数（包裹数） 1,   2
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.totalWeight">
            <summary>
             	总重量,(5,2),1,单位kg   1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.totalVolume">
            <summary>
            总体积,(5,2),0, 单位m3     0.01
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.packageService">
            <summary>
            包装,length=32,0,包装（直接用中文） ： 纸、纤、木箱、木架、托膜、托木（大客户模式下运输方式为零担时必填）,   纸
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.PackageInfoClass.deliveryType">
            <summary>
            送货方式,length=32,1,1、自提； 2、送货进仓； 3、送货（不含上楼）； 4、送货上楼； 5、大件上楼 ,     9
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.insuranceValue">
            <summary>
            保价金额,decimal,可为空 如为空，则FOSS开单时默认为0,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.codType">
            <summary>
            代收货款类型 length=32,0, 	1：即日退 3：三日退 代收货款金额不为0时，此项客户必填，代收货款金额为0或为空，则代收类型默认为无
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.reciveLoanAccount">
            <summary>
            代收货款客户账号 length=32, 0, 代收货款金额不为0时，此项客户必填,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.accountName">
            <summary>
            代收货款客户开户名,length=32,0,代收货款金额不为0时，此项客户必填
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.codValue">
            <summary>
            代收货款金额,decimal,0,可为空 如为空，则FOSS开单时默认为0
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.AddServicesClass.backSignBill">
            <summary>
            签收回单,length=32,1,0:无需返单 1：签收单原件返回 2:客户签收单传真返回 4: 运单到达联传真返回
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.OrderExtendFieldsClass.value">
            <summary>
            订单扩展属性值,length=256,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.OrderExtendFieldsClass.key">
            <summary>
            订单扩展属性键,length=256
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.logisticID">
            <summary>
            渠道单号,length=32,1,由第三方接入商产生的订单号（生成规则为sign+数字，sign值由双方约定）   LPEXP33343111111113
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.custOrderNo">
            <summary>
            渠道单号,length=32,0,客户的订单号,   123456
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.mailNo">
            <summary>
            运单号,length=32,0,预埋单号时传运单号，不传时会返回运单号给客户,
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.needTraceInfo">
            <summary>
            是否需要订阅轨迹 ,0,   1：是（为是时要对接轨迹推送接口） 2：否 默认否
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.companyCode">
            <summary>
            第三方接入商的公司编码,length=32,1, 	渠道来源,   EWB111
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.orderType">
            <summary>
            下单模式,length=32,1,1、 散客模式（单量较小，平台类，异地调货，退换货等发货地址不固定-需要通知快递员或者司机上门取件打单）； 2、 大客户模式（仓库发货，固定点出货，单量较大客户自行打印标签，快递员直接盲扫走货）   1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.transportType">
            <summary>
            运输方式/产品类型 length=32,1,（具体传值请与月结合同签订约定的为准，否则可能影响计费） 快递运输方式 : RCP：大件快递360； NZBRH：重包入户； ZBTH：重包特惠； WXJTH：微小件特惠； JJDJ：经济大件； PACKAGE：标准快递； DEAP：特准快件；EPEP ：电商尊享；CITYPIECE：同城件 零担运输方式： JZKY：精准空运（仅散客模式支持该运输方式）; JZQY_LONG：精准汽运； JZKH：精准卡航； AGENT_VEHICLE：汽运偏线； DTD：精准大票-经济件； YTY：精准大票-标准件； PCP：精准包裹   PACKAGE
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.customerCode">
            <summary>
            客户编码/月结账号 length=32,1,下单模式为2时必填 德邦一线营业部给到客户的月结客户编码 ，是一串数字，由营业部给出。沙箱环境需要下子母件订单必须传值 219401 或者219402          12345678
            </summary>
        </member>
        <member name="F:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.sender">
            <summary>
            发货人信息,1
            </summary>
        </member>
        <member name="F:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.receiver">
            <summary>
            收货人信息,1
            </summary>
        </member>
        <member name="F:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.packageInfo">
            <summary>
            包裹信息,1
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.gmtCommit">
            <summary>
            订单提交时间,lenght=32,1, 2012-11-27 18:44:19 系统当前时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.payType">
            <summary>
            支付方式,length=32,1,0:发货人付款（现付） 1:收货人付款（到付） 2：发货人付款（月结） （电子运单客户不支持寄付）,    1
            </summary>
        </member>
        <member name="F:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.addServices">
            <summary>
            增值服务
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.smsNotify">
            <summary>
            短信通知 length=32,0,Y：需要 N: 不需要
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.originalWaybillNumber">
            <summary>
            原运单号,length=32,0,异地调货退货场景可能用到
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.remark">
            <summary>
             	备注 ,length=100,0,注意事项（备注）
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.isOut">
            <summary>
            是否外发,length=32,0,Y：需要 N: 不需要（仅适用于大客户模式下运输方式为零担时，此字段必填；不适用于快递）
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.passwordSigning">
            <summary>
            是否口令签收,length=30,0, 	仅适用于快递，Y：需要 N: 不需要；若为Y，必须收货人提供验证码给快递员才能签收，该服务是有偿的，具体费用请让我司收货营业部联系张宁（491407），请慎重使用！
            </summary>
        </member>
        <member name="F:YJT.Logistics.Debonlogistic.CreateOrderJsonClass.orderExtendFields">
            <summary>
            扩展字段 0  如需传值货物唯一码，key值（变量名）必须为custewb_number，value值为货物唯一码，以逗号分隔，且唯一码数量与件数一致，每个唯一码长度50
            </summary>
        </member>
        <member name="T:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass">
            <summary>
            调用新下单服务接口后返回的对象
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.result">
            <summary>
            请求成功标识, 	true or false,eq:true
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.reason">
            <summary>
            错误原因,eq:成功
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.mailNo">
            <summary>
            运单号集合（多个运单号）,返回运单号集合（多个运单号以逗号分割）,eq:6755673564
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.logisticID">
            <summary>
            渠道单号,失败返回订单号（对方下单的订单号）,eq:XCAI-9223372036854775782
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.arrivedOrgSimpleName">
            <summary>
            目的站部门简称,零担电子面单返回到达部门简称，快递电子面单返回大头笔加二段码,eq:收货省份收货城市 or**派送部
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.arrivedOutFieldName">
            <summary>
            最终到达外场,零担电子面单标签信息,eq:**转运场
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.resultCode">
            <summary>
            结果代码,eq:1000
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.parentMailNo">
            <summary>
            母单号标识,6755673564
            </summary>
        </member>
        <member name="P:YJT.Logistics.Debonlogistic.CreateOrderJsonResClass.uniquerRequestNumber">
            <summary>
            请求唯一编号,本次请求的唯一编号，用于排查问题,32028520580358154
            </summary>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.UrlEncode(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            小写转大写，特殊字符特换
            </summary>
            <param name="strSrc">原字符串</param>
            <param name="encoding">编码方式</param>
            <param name="bToUpper">是否转大写</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.DelOrder(YJT.Logistics.Debonlogistic.DelOrderClass,System.String@)">
            <summary>
            放弃订单
            </summary>
            <param name="doc"></param>
            <param name="resStr"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.CreateOrder(YJT.Logistics.Debonlogistic.CreateOrderJsonClass,System.String@)">
            <summary>
            新下单服务接口
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.ModifyOrder(YJT.Logistics.Debonlogistic.ModifyOrderJsonClass)">
            <summary>
            修改订单
            </summary>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.QueryOrder(YJT.Logistics.Debonlogistic.QueryOrderClass)">
            <summary>
            查询单据明细
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.FilterArea(YJT.Logistics.Debonlogistic.FilterAreaClass)">
            <summary>
            订单地址排查是否可送达
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.Debonlogistic.QueryOrder">
            <summary>
            标准订单查询,
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassCreateOrder">
            <summary>
            顺丰下单类
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass">
            <summary>
            寄送地址信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.address">
            <summary>
            地址 string(200) 是, 东西路5号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.city">
            <summary>
            城市 string(20) 是, 深圳市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.company">
            <summary>
            公司名 string(100) 条件, xxx公司
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.contact">
            <summary>
            联系人姓名 string(20) 条件 , 王浩
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.contactType">
            <summary>
            联系人类别 number(1)是, 1,发货地址2收货地址,1的情况可以不填写,自动从企业维护的信息提取(不建议)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.county">
            <summary>
            区县 string(20) 是, 南湖区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.mobile">
            <summary>
            联系电话 string(20) 条件,没用 用 空字符串填充,或者跟tel一致 至少选一个
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.province">
            <summary>
            省份 string(20) 是 广东省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass.tel">
            <summary>
            联系电话 string(20) 条件, 138xxxxxxxx
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass">
            <summary>
            增值服务类
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.enum增值服务类别.保价">
            <summary>
            以寄件地区货币为准,val保留3位小数
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.enum增值服务类别.代收货款">
            <summary>
            value为货款,以寄件地货币为准,保留3为小数,value1 为代收货款卡号
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.enum增值服务类别.电子验收">
            <summary>
            value 为图片类型:拍类类型 13:签单返还电子图片
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.enum增值服务类别.定时派送">
            <summary>
            value 为日期,格式(yyyy-MM-dd) ,v1 为时段代码 1=[9-11点],2=[11-13点]依次类推
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.CtorService(YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.enum增值服务类别,System.String,System.String)">
            <summary>
            构造增值服务对象
            </summary>
            <param name="val">保留3位小数</param>
            <returns></returns>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.name">
            <summary>
            增值服务名称 string(10) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.value">
            <summary>
            增值服务值1 string(20) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.value1">
            <summary>
            增值服务2 string(20) 否
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass">
            <summary>
            货品详细
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.name">
            <summary>
            货品名称 string(50) 是,
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.specifications">
            <summary>
            货品规格 string(50) 是,
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.weight">
            <summary>
            重量 number(13,3),单位(kg),大于0 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.count">
            <summary>
            件数 number(13,3) 大于0 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.batchNo">
            <summary>
            批次号 string(50) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.amount">
            <summary>
            商品单价 string(50) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.volume">
            <summary>
            货品体积 number(16,3) 条件  立方厘米,如果设置了轻抛比,此项必填,且大于0
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.remark1">
            <summary>
            自定义字段1 string(200) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.remark2">
            <summary>
            自定义字段2 string(200) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass.remark3">
            <summary>
            自定义字段3 string(200) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.orderId">
            <summary>
            订单号 string(100) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.payMethod">
            <summary>
            付款方式,string(10),否 //寄付月结,寄付现结,收方付,第三方付
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.expressType">
            <summary>
            产品类型,string(10),否,
            </summary>
            
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.isDocall">
            <summary>
            下Call 0否,1是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.temperature">
            <summary>
            温度要求 string(50) 否,1 10-25,6 2-30,12 2-8,13 非温控,17 2-25
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.customerId">
            <summary>
            客户id,string,是, 燕都测试704
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.timestamp">
            <summary>
            时间戳 string,13位时间戳
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.sign">
            <summary>
            签名,string 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.contactInfoList">
            <summary>
            双方寄件地址信息,不允许直接赋值,赋值的目的是用于反序列化用,并非给程序使用,未来考虑使用特性,或者运行时控制
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.AddcontactInfoList(YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass)">
            <summary>
            添加寄送地址(list)
            </summary>
            <param name="val"></param>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.serviceList">
            <summary>
            增值服务,不允许直接赋值,赋值的目的是用于反序列化用,并非给程序使用,未来考虑使用特性,或者运行时控制
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.AddserviceList(YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass)">
            <summary>
            添加一个增值服务(list)有构造器
            </summary>
            <param name="val"></param>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.cargoDetails">
            <summary>
            寄送的货品详细,不允许直接赋值,赋值的目的是用于反序列化用,并非给程序使用,未来考虑使用特性,或者运行时控制
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.ClassCreateOrder.AddcargoDetails(YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass)">
            <summary>
            添加一个货品详细(list)
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassCreateOrderRes">
            <summary>
            创建订单结果返回类{"status":200,"msg":"success","data":"SF1351562120680"}
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrderRes.status">
            <summary>
            200
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrderRes.msg">
            <summary>
            success
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassCreateOrderRes.data">
            <summary>
            SF1351562120680
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder">
            <summary>
            追加子单类,此类以list方式提交
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.deliveryOrder">
            <summary>
            系统订单号  String(100) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.maktx">
            <summary>
            商品名称 String(50) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.groes">
            <summary>
            商品规格 String(50) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.brgew">
            <summary>
            重量.单位(KG),大于零且小于10000,最多三位小数 Number(13,3) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.zjsh">
            <summary>
            件数.(也指商品的数量),大于0 且小于1200 的整数  Number(13,3) 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.charg">
            <summary>
            批次号 String(50)  否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassAddSubOrder.traceCode">
            <summary>
            追溯码,多个以逗号隔开若企业为条码分拣，追溯码个数不能大于单个商品件数；若企业为非条码，追溯码个数必须等于单个商品件数 String(200) 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCancelOrder.deliveryOrder">
            <summary>
            订单号 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCancelOrder.customerId">
            <summary>
            客户ID
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCancelOrder.timestamp">
            <summary>
            13位时间戳
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassCancelOrder.sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfo">
            <summary>
            查询订单类
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes">
            <summary>
            查询物流免单类{"status":-1,"msg":"error","data":"该订单还未下单，请先下单!"}
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.expressType">
            <summary>
            产品类型, 2
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.payMethod">
            <summary>
            付款方式 0
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.returnTrackingNo">
            <summary>
            签回单号 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.monthAccount">
            <summary>
             月结卡号 空
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.orderNo">
            <summary>
            无说明,可能是内部ID,1647847475376
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.originCode">
            <summary>
            原寄地代码 空
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destCode">
            <summary>
            收件地代码 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverCompany">
            <summary>
            寄件人公司 测试企业不分拣
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverName">
            <summary>
            寄件人姓名 张三
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverTel">
            <summary>
            寄件人电话 13211111111
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverProvince">
            <summary>
            寄件人省 河北省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverCity">
            <summary>
            寄件人市 保定市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverCounty">
            <summary>
            寄件人区 顺义区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.deliverAddress">
            <summary>
            寄件人详细地址 yyy号发件详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerCompany">
            <summary>
            收件人公司 测试公司2
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerName">
            <summary>
            收件人姓名 李四
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerTel">
            <summary>
            收件人电话 13222222222
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerProvince">
            <summary>
            收件人省 河北省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerCity">
            <summary>
            收件人市 河北省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerCounty">
            <summary>
            收件人区 保定市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.consignerAddress">
            <summary>
            收件人详细地址 河北省保定市xxx号收件详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.totalFee">
            <summary>
            费用合计 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.insureFee">
            <summary>
            保价费用(元) null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.codValue">
            <summary>
            代收货款金额(元) null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.codMonthAccount">
            <summary>
            代收货款卡号 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.remark">
            <summary>
            备注 备注无
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.mailNo">
            <summary>
            运单号 SF1361448430435
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.abFlag">
            <summary>
            AB 标 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.xbFlag">
            <summary>
            XB标 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.proCode">
            <summary>
            产品代码 标快
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.sourceCityCode">
            <summary>
            原寄地城市代码  312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.sourceDeptCode">
            <summary>
            原寄地网点代码 空
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destRouteLabel">
            <summary>
            目的地路由标签 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destCityCode">
            <summary>
            目的地城市代码 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destDeptCode">
            <summary>
            目的地网点代码 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destTeamCode">
            <summary>
            目的地单元区域[需要水印的标] 空
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.codingMapping">
            <summary>
            入港映射码 WU
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.codingMappingOut">
            <summary>
            出港映射码 11
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.sourceTransferCode">
            <summary>
            原寄地中转场代码 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.destTransferCode">
            <summary>
            目的地中转场 312
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.limitTypeCode">
            <summary>
            时效代码 T6
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.cargoTypeCode">
            <summary>
            快件内容 T6
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.printIcon">
            <summary>
            打印图标 1 重 2 蟹 3 鲜 4 碎;根据托寄物需要打印的图标返回8位数字，每一位只有 0 和 1 两种，0 表示按运单默认的规则，1表示显示。八位数字依次对应标签为重货贴纸、蟹类、生鲜、易碎、医药、重货产品、备用、备用。如图中需打印易碎、蟹类标签对应 printIcon=01010000
            00000000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.twoDimensionCode">
            <summary>
            二维码 MMM={'k1':'312','k2':'312','k3':'','k4':'T6','k5':'SF1361448430435','k6':'','k7':'4136c0bb'}
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.cargo">
            <summary>
            托寄物名称 测试商品;
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.cargoCount">
            <summary>
            托寄物数量 1.000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.cargoUnit">
            <summary>
            托寄物单位 箱
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.cargoWeight">
            <summary>
            托寄物实际重量，单位 KG  1.000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.ClassGetOrderInfoResData.signBackTwoDimensionCode">
            <summary>
            未知 null
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.status">
            <summary>
            200
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.msg">
            <summary>
            success
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.data2">
            <summary>
            类
            </summary>
        </member>
        <member name="F:YJT.Logistics.ShunFengLogistic.ClassGetOrderInfoRes.data">
            <summary>
            该订单还未下单，请先下单!
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.CustomerId">
            <summary>
            客户ID,顺丰提供
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.Secret">
            <summary>
            密钥,顺丰提供
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShunFengLogistic.IsTest">
            <summary>
            设置是否使用测试模式
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="customerId">客户ID,顺丰提供</param>
            <param name="secret">密钥,顺丰提供</param>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.CreateSign(System.String)">
            <summary>
            创建签名
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.CreateOrder(YJT.Logistics.ShunFengLogistic.ClassCreateOrder,System.Boolean@,System.Int32@,System.String@,System.String@,System.String@)">
            <summary>
            创建物流新订单
            </summary>
            <param name="logisObj"></param>
            <param name="isOk"></param>
            <param name="errCode"></param>
            <param name="errMsg"></param>
            <param name="sendData"></param>
            <param name="outData"></param>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.CancelOrder(System.String,System.Boolean@,System.Int32@,System.String@,System.String@,System.String@)">
            <summary>
            放弃订单
            </summary>
            <param name="logisObjNum"></param>
            <param name="isOk"></param>
            <param name="errCode"></param>
            <param name="errMsg"></param>
            <param name="sendData"></param>
            <param name="outData"></param>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.GetOrderInfo(System.String,System.Boolean@,System.Int32@,System.String@)">
            <summary>
            查询物流面单信息
            </summary>
            <param name="logisNum"></param>
            <param name="isOk"></param>
            <param name="errCode"></param>
            <param name="errMsg"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.Ctor_CreateOrderObj(System.String,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ContactinfoClass,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass,System.String,System.String,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.enum产品类型,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.enum付款方式)">
            <summary>
            构造一个创建订单类
            </summary>
            <param name="wd">温度要求 string(50) 否,1 10-25,6 2-30,12 2-8,13 非温控,17 2-25</param>
            <param name=""></param>
            <param name="erpOrder">订单ID</param>
            <param name="sendObj">发件</param>
            <param name="receiveObj">收件</param>
            <param name="serverObj">YJT.Logistics.ShunFengLogistic.ClassCreateOrder.ServiceListClass.CtorService</param>
            <param name="goods">货品</param>
            <param name="ps">备注</param>
            <param name="orderType">产品类型</param>
            <param name="setType">结算方式</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.Ctor_AddSubOrderObj(System.String,YJT.Logistics.ShunFengLogistic.ClassCreateOrder.CargoDetailsClass,System.Collections.Generic.List{YJT.Logistics.ShunFengLogistic.ClassAddSubOrder},System.String)">
            <summary>
            构造或追加一个子单对象
            </summary>
            <param name="deliveryOrder">物流单号</param>
            <param name="item">货品对象</param>
            <param name="oldList">原始货品集合,最多100个,null为创建,指定则为追加</param>
            <param name="traceCode">追溯码,一般不用</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.Init(System.String,System.String)">
            <summary>
            创建或返回之前创建的顺丰快递实例
            </summary>
            <param name="customerId"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ShunFengLogistic.RemoveObj(System.String)">
            <summary>
            删除一个顺丰快递的实例
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.apiCode">
            <summary>
            接口编码 具体接口对应的编码	oms_ordercreate_waybillno
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.senderNo">
            <summary>
            协议客户编码 协议客户编码 1100094086346
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.secrect">
            <summary>
            私匙 生成接口内部摘要签名的私匙 485a7335256edfe015deb0eb269f1b51
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.msgType">
            <summary>
            报文格式 0 json 1 xml 默认json
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.serialNo">
            <summary>
            序列号 文追踪条码 要求全局唯一 c1273136-abb0-4e9f-bfcb-5075be7664c9
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.logistics_interface">
            <summary>
            报文主体
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod.signature">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.mobile">
            <summary>
            用户移动电话	String	20	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.prov">
            <summary>
            用户所在省，使用国标全称	String	20	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.city">
            <summary>
            用户所在市，使用国标全称	String	20	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.county">
            <summary>
            用户所在县（区），使用国标全称	String	20	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.address">
            <summary>
            用户详细地址	String	200	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.name">
            <summary>
            用户姓名	String	200	是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.post_code">
            <summary>
            用户邮编	String	20	否
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress.phone">
            <summary>
            用户电话，包括区号、电话号码及分机号，中间用“-”分隔；	String	20	否
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.cargo_name">
            <summary>
            商品名称	String	50	是	内件名称 "医用棉签(B型)"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.cargo_category">
            <summary>
            商品类型	String	50	否	""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.cargo_quantity">
            <summary>
            商品数量	int		否	""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.cargo_value">
            <summary>
            商品单价	Numberic(12,2)		否	（单位：元） 1
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.cargo_weight">
            <summary>
            商品重量	Numberic(8,3)		否	（单位：克）1
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.order_no">
            <summary>
            订单号	String	50	是	用于一票多件 "1"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.length">
            <summary>
            长	Numberic(8,3)		否	单位：厘米（用于一票多件）""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.width">
            <summary>
            宽	Numberic(8,3)		否	单位：厘米（用于一票多件）""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo.high">
            <summary>
            高	Numberic(8,3)		否	单位：厘米（用于一票多件）""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.created_time">
            <summary>
            订单接入时间	String	20	是	yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ecommerce_user_id">
            <summary>
            电商客户标识	String	50	是	客户的店铺ID ecommerce_user_id这个字段可以填一个 小于50位随机数
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.sender_no">
            <summary>
            协议客户代码	String	20	否	如果有协议客户号，请填写
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.logistics_order_no">
            <summary>
            ERP唯一编号,物流订单号	String	50	是	物流订单号 LP00086773322982
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.batch_no">
            <summary>
            批次号	String	50	否 20201224001
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.waybill_no">
            <summary>
            运单号	String	20	是	运单号 默认为空
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.one_bill_flag">
            <summary>
            一票多件标识	int		是	一票多件标志:0正常 1一票多件 默认为0
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.submail_no">
            <summary>
            子单号	String	200	否	一票多单子单号，以“,”(半角逗号)分隔，非一票多单不填
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.one_bill_fee_type">
            <summary>
            一票多件计费方式	int		否	一票多件计费方式:1主单统一计费 2分单免首重计费 3平均重量计费 4主分单单独计费 0
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.contents_attribute">
            <summary>
            内件性质	int		否	1：文件  3、物品 2：信函  4、包裹
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.base_product_no">
            <summary>
            基础产品代码	String	20	否	特快填写11210 快包填写11312 默认1
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.biz_product_no">
            <summary>
            业务产品分类	String	20	是	1：特快专递  2：快递包裹 3：代收|到付 默认""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.weight">
            <summary>
            订单重量	Numberic(8,3)		否	单位：克
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.volume">
            <summary>
            订单体积	Numberic(8,3)		否	单位：立方厘米 1
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.length">
            <summary>
            长	Numberic(8,3)		否	单位：厘米 "1"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.width">
            <summary>
            宽	Numberic(8,3)		否	单位：厘米
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.height">
            <summary>
            高	Numberic(8,3)		否	单位：厘米 "1"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.postage_total">
            <summary>
            邮费	Numberic(12,2)		否	单位：元
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.pickup_notes">
            <summary>
            备注	String	1000	否	
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.insurance_flag">
            <summary>
            保险保价标志	int		否	1:基本2:保价3:保险
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.insurance_amount">
            <summary>
            保价金额	Numberic(12,2)		否	单位：元
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.insurance_premium_amount">
            <summary>
            保险金额	Numberic(12,2)		否	单位：元
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.deliver_type">
            <summary>
            投递方式	int		否	1:客户自提2:上门投递3:智能包裹柜4:网点代投
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.deliver_pre_date">
            <summary>
            投递预约开始时间	Date		否	yyyy-mm-dd hh:mm:ss（若只有一个日期譬如2020-03-17 14:00:00，则预约开始时间传2020-03-17 00:00:00，预约结束时间传2020-03-17 14:00:00） 2020-10-20 10:00:00
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.pickup_type">
            <summary>
            揽收方式	int		否	揽收方式：0 客户送货上门，1 机构上门揽收 "1"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.pickup_pre_begin_time">
            <summary>
            揽收预约起始时间	String	20	否	yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.pickup_pre_end_time">
            <summary>
            揽收预约截至时间	String	20	否	yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.payment_mode">
            <summary>
            付款方式	int		否	1:寄件人 2:收件人 3:第三方 4:收件人集中付费 5:免费 6:寄/收件人 7:预付卡
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.cod_flag">
            <summary>
            代收款标志	int		否	1:代收货款2:代缴费9:无 1
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.cod_amount">
            <summary>
            代收款金额	Numberic(12,2)		否	单位：元 61.00
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.receipt_flag">
            <summary>
            回单标识	int		否	1:基本2:回执 3:短信 5:电子返单 6:格式返单7:自备返单8:反向返单 "1"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.receipt_waybill_no">
            <summary>
            回单运单号	String	20	否 ""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.electronic_preferential_no">
            <summary>
            电子优惠券号	String	50	否 默认""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.electronic_preferential_amount">
            <summary>
            电子优惠券金额	Numberic(12,2)		否	单位：元 
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.valuable_flag">
            <summary>
            贵品标识	int		否	贵品标识:0 无 1有
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.sender_safety_code">
            <summary>
            寄件人安全码	String		否 "0"
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.receiver_safety_code">
            <summary>
            收件人安全码	String		否 ""
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.note">
            <summary>
            备注	String		是	针对公安交管邮件
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.cargos">
            <summary>
            此对象不要直接使用,使用AddCarGo管理,这个用于生成JSON和反序列化时候使用
            </summary>
        </member>
        <member name="M:YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.AddCarGo(YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo,System.Int32)">
            <summary>
            添加一个货品
            </summary>
            <param name="item">要添加的货品</param>
            <param name="sn">列表中的几个,小于0追加,大于总数追加,否则是替换</param>
            <returns> 返回当前追加的是列表中的的几个,从0起,-1表示添加失败</returns>
        </member>
        <member name="F:YJT.Logistics.YouZhengEms.ClassInterface下单取号.OrderNormal">
            <summary>
            OrderNormal对象（节点名称OrderNormal）			是
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface订单取消.ClassMain.created_time">
            <summary>
            订单接入时间 2020-08-15 10:00:00
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface订单取消.ClassMain.logistics_order_no">
            <summary>
            物流订单号 ERP编号LP00086773322982
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface订单取消.ClassMain.waybill_no">
            <summary>
            运单号9891787223649
            </summary>
        </member>
        <member name="P:YJT.Logistics.YouZhengEms.ClassInterface订单取消.ClassMain.cancel_reason">
            <summary>
            取消原因用户删单
            </summary>
        </member>
        <member name="T:YJT.Logistics.YouZhengEms.ClassResBase">
            <summary>
            返回结果的基类
            </summary>
        </member>
        <member name="T:YJT.Logistics.YouZhengEms.Classoms_ordercreate_waybillnoRes">
            <summary>
            下单取号调用结果
            </summary>
        </member>
        <member name="T:YJT.Logistics.YouZhengEms.Classoms_cancelorderRes">
            <summary>
            订单取消结果类
            </summary>
        </member>
        <member name="F:YJT.Logistics.YouZhengEms._allList">
            <summary>
            所有实例,以协议编码区分
            </summary>
        </member>
        <member name="M:YJT.Logistics.YouZhengEms.GetModGetEmsOrder(System.String,System.String,System.Double,System.Double,System.Double,System.Double,YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress,YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.ClassAddress,YJT.Logistics.YouZhengEms.ClassInterface下单取号.ClassMain.Cargo[],System.String,System.Int32,System.Int32,System.String,System.String,System.Double,System.Int32,System.Int32,System.Double,System.String,System.Double,System.Int32,System.Double,System.String,System.Int32,System.String,System.Int32,System.Double,System.Int32,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            下单取号,下传订单的第一步oms_ordercreate_waybillno
            </summary>
            <param name="ecommerce_user_id">电商客户标识	String	50	是	客户的店铺ID ecommerce_user_id这个字段可以填一个 小于50位随机数 </param>
            <param name="erpid">ERP唯一编号,物流订单号	String	50	是	物流订单号 LP00086773322982 </param>
            <param name="length">长	Numberic(8,3)		否	单位：厘米 "1"</param>
            <param name="width">宽	Numberic(8,3)		否	单位：厘米</param>
            <param name="weight">订单重量	Numberic(8,3)		否	单位：克</param>
            <param name="height">高 Numberic(8,3)		否 单位：厘米 "1"</param>
            <param name="sender">发货地址信息</param>
            <param name="receiver">收货地址信息</param>
            <param name="cargos">可选参数,货品,如果不指定,需要获得对象后,自助添加</param>
            <param name="batch_no">批次号	String	50	否 20201224001</param>
            <param name="one_bill_fee_type">一票多件计费方式	int		否	一票多件计费方式:1主单统一计费 2分单免首重计费 3平均重量计费 4主分单单独计费 0</param>
            <param name="contents_attribute">内件性质	int		否	1：文件  3、物品 2：信函  4、包裹</param>
            <param name="base_product_no">基础产品代码	String	20	否	特快填写11210 快包填写11312 默认1</param>
            <param name="biz_product_no">业务产品分类	String	20	是	1：特快专递  2：快递包裹 3：代收|到付 默认""</param>
            <param name="cod_amount">代收款金额	Numberic(12,2)		否	单位：元 61.00</param>
            <param name="cod_flag">代收款标志	int		否	1:代收货款2:代缴费9:无 1</param>
            <param name="deliver_type">投递方式	int		否	1:客户自提2:上门投递3:智能包裹柜4:网点代投</param>
            <param name="electronic_preferential_amount">电子优惠券金额	Numberic(12,2)		否	单位：元 </param>
            <param name="electronic_preferential_no">电子优惠券号 String  50  否 默认""</param>
            <param name="insurance_amount">保价金额 Numberic(12,2)		否 单位：元</param>
            <param name="insurance_flag">保险保价标志	int		否	1:基本2:保价3:保险</param>
            <param name="insurance_premium_amount">保险金额	Numberic(12,2)		否	单位：元</param>
            <param name="note">备注	String		是	针对公安交管邮件</param>
            <param name="payment_mode">付款方式	int		否	1:寄件人 2:收件人 3:第三方 4:收件人集中付费 5:免费 6:寄/收件人 7:预付卡</param>
            <param name="pickup_notes">备注	String	1000	否	</param>
            <param name="pickup_type">揽收方式	int		否	揽收方式：0 客户送货上门，1 机构上门揽收 1</param>
            <param name="postage_total">邮费	Numberic(12,2)		否	单位：元</param>
            <param name="receipt_flag">回单标识	int		否	1:基本2:回执 3:短信 5:电子返单 6:格式返单7:自备返单8:反向返单 1</param>
            <param name="receiver_safety_code">收件人安全码	String		否 ""</param>
            <param name="sender_safety_code">寄件人安全码	String		否 ""</param>
            <param name="valuable_flag">贵品标识	int		否	贵品标识:0 无 1有 0</param>
            <param name="waybill_no"></param>
            <param name="submail_no"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.YouZhengEms.GetSubModCargo(System.String,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double,System.String,System.Double)">
            <summary>
            返回一个货品对象
            </summary>
            <param name="cargo_category">商品类型(规格)	String	50	否	""</param>
            <param name="cargo_name">商品名称	String	50	是	内件名称 "医用棉签(B型)"</param>
            <param name="cargo_quantity">商品数量	int		否	""</param>
            <param name="cargo_value">商品单价	Numberic(12,2)		否	（单位：元） 1</param>
            <param name="cargo_weight">商品重量	Numberic(8,3)		否	（单位：克）1</param>
            <param name="cargo_high">高	Numberic(8,3)		否	单位：厘米（用于一票多件）""</param>
            <param name="cargo_length">长	Numberic(8,3)		否	单位：厘米（用于一票多件）""</param>
            <param name="cargo_order_no">订单号	String	50	是	用于一票多件 "1"</param>
            <param name="cargo_width">宽	Numberic(8,3)		否	单位：厘米（用于一票多件）""</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.YouZhengEms.GetSubModAddress(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取一个订单对象
            </summary>
            <param name="address">用户详细地址	String	200	是</param>
            <param name="city">用户所在市，使用国标全称	String	20	是</param>
            <param name="county"> 用户所在县（区），使用国标全称	String	20	是</param>
            <param name="mobile">用户移动电话	String	20	是</param>
            <param name="name">用户姓名	String	200	是</param>
            <param name="phone">用户电话，包括区号、电话号码及分机号，中间用“-”分隔；	String	20	否</param>
            <param name="post_code">用户邮编	String	20	否</param>
            <param name="prov">用户所在省，使用国标全称	String	20	是</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.YouZhengEms.SendGetEmsOrder(YJT.Logistics.YouZhengEms.ClassYouZhengEmsMod,System.Boolean@,System.Int32@,System.String@,System.String@,System.String@)">
            <summary>
            执行调用接口,调用的接口,根据Mod对象的APICODE决定
            </summary>
            <param name="mod"></param>
            <param name="isOk"></param>
            <param name="errCode"></param>
            <param name="errMsg"></param>
            <param name="sendString"></param>
            <param name="resString"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.appKey">
            <summary>
            955D401634B395D4C9F12B7F09459EC0
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.appSecret">
            <summary>
            be9c77ae4dcf4f978b52db21cc50acc5
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.token">
            <summary>
            0add94177f0240368de621c80e759651kzdk
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.accUrl">
            <summary>
            请求京东的地址 https://api.jd.com/routerjson
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.deptNo">
            <summary>
            事业部编号 EBU4418046594811
            </summary>
        </member>
        <member name="T:YJT.Logistics.JingDongLogistics.ClassCreateOrder">
            <summary>
            创建订单类
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderDanjbh">
            <summary>
            ERP编号
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderRecMoney">
            <summary>
            代收货款,到付时,必须大于0
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderPayType">
            <summary>
            运费结算方式； 0:月结 1:到付 2:现付
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderBaojia">
            <summary>
            保价金额
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderColdChainOn">
            <summary>
            特殊行业标识 ；0，普通；1，生鲜；2，汽配；3，医药
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderTemptureNum">
            <summary>
            温层（冷链）；0,温控（10 - 15℃）；1,冷藏（冷藏0 - 4℃）；2,冷冻（-18℃以下）；3,深冷（-30℃以下）；4,常温 ；10,医药常温（10 - 30℃）；11,医药控温（15 - 25℃）；12,医药冷藏（2 - 8℃）；13,医药冷冻（-15 - 25℃）；
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassCreateOrder.OrderDeliverType">
            <summary>
            产品类型 否 1 产品类型；1：零担 2:整车直达 3:特惠送 4:特快送 5:特惠零担 6:特快零担 7航空代理 8航空直客9 铁路直客 10 特惠整车11特惠拼车12同城直配13:冷链卡班 14冷链专车15:冷链城配 16:送货到仓 17医药零担 18医药整车 25 特快重货 30 医药大票零担 31冷链小票
            </summary>
        </member>
        <member name="T:YJT.Logistics.JingDongLogistics.ClassCreateOrderRes">
            <summary>
            创建订单结果类
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.ClassCreateOrderRes.WlErrMsg">
            <summary>
            运单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongLogistics.ClassCreateOrderRes.WlOrder">
            <summary>
            内部编号
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassGetWl.newWBType">
            <summary>
            Number 	是 	0 	单号类型；0：商家订单号（下单传的orderno）；1：eclp单号（下单接口返回的ECO单号）；2：京东快递单号（下单接口返回的JD单号）
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongLogistics.ClassGetWl.no">
            <summary>
            String 	是 	VA00040295430 	单号；与newWBType对应的单号，（orderno最大长度200）
            </summary>
        </member>
        <member name="M:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.#ctor">
            <summary>
            默认构造
            </summary>
        </member>
        <member name="M:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Double,System.Double)">
            <summary>
            构造
            </summary>
            <param name="salePlat">String 是 销售平台（0010001京东商城；0010002天猫、淘宝订单；0030001其他平台）</param>
            <param name="orderId"> String 是 josTest200720114201 订单号，请保证商家编码下唯一，长度：50；</param>
            <param name="senderName">String 是 张三 寄件人姓名，说明：不能为生僻字，暂不支持emoji</param>
            <param name="senderAddress"> String 是 寄件人地址，说明：不能为生僻字，请填写省市区县详细地址，长度不能超过200字符</param>
            <param name="senderMobile">String 否 88888888888 寄件人手机(寄件人电话、手机至少有一个不为空)</param>
            <param name="receiveName">String 是 李四 收件人姓名，说明：不能为生僻字，暂不支持emoji</param>
            <param name="receiveAddress">String 是 收件人地址，说明：不能为生僻字，请填写省市区县详细地址，长度不能超过200字符</param>
            <param name="receiveMobile">String 否 88888888888 收件人手机号(收件人电话、手机至少有一个不为空)</param>
            <param name="packageCount"> Number 是 1 包裹数(大于0，小于1000)</param>
            <param name="weight">Number 是 2.5 订单总重量(单位：kg，保留小数点后两位)</param>
            <param name="vloumn">Number 是 1 体积(单位：cm3，保留小数点后两位)</param>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.salePlat">
            <summary>
            String 是 销售平台（0010001京东商城；0010002天猫、淘宝订单；0030001其他平台）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.orderId">
            <summary>
            String 是 josTest200720114201 订单号，请保证商家编码下唯一，长度：50；
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.thrOrderId">
            <summary>
            String 否 1234568901 销售平台订单号(例如京东订单号或天猫订单号等等。总长度不要超过100。如果有多个单号，用英文, 间隔。例如：7898675,7898676)，注：逗号前需要填写订单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderName">
            <summary>
            String 是 张三 寄件人姓名，说明：不能为生僻字，暂不支持emoji
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderAddress">
            <summary>
            String 是 北京亦庄经济开发区科创十一街与经海四路交叉口西北150米京东总部4号楼 寄件人地址，说明：不能为生僻字，请填写省市区县详细地址，长度不能超过200字符
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderTel">
            <summary>
            String 否 010-00000000 寄件人电话
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderMobile">
            <summary>
            String 否 88888888888 寄件人手机(寄件人电话、手机至少有一个不为空)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderPostcode">
            <summary>
            String 否 100000 寄件人邮编，长度：6位
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.receiveName">
            <summary>
            String 是 李四 收件人姓名，说明：不能为生僻字，暂不支持emoji
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.receiveAddress">
            <summary>
            String 是 北京亦庄经济技术开发区科创十一街18号院京东总部1号楼 收件人地址，说明：不能为生僻字，请填写省市区县详细地址，长度不能超过200字符
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.province">
            <summary>
            String 否 无 收件人省
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.city">
            <summary>
            String 否 无 收件人市
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.county">
            <summary>
            String 否 无 收件人县
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.town">
            <summary>
            String 否 无 收件人镇
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.provinceId">
            <summary>
            Number 否 1 收件人省编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.cityId">
            <summary>
            Number 否 1 收件人市编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.countyId">
            <summary>
            Number 否 1 收件人县编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.townId">
            <summary>
            Number 否 1 收件人镇编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.siteType">
            <summary>
            Number 否 1 站点类型
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.siteId">
            <summary>
            Number 否 1 站点编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.siteName">
            <summary>
            String 否 无 站点名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.receiveTel">
            <summary>
            String 否 010-00000000 收件人电话
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.receiveMobile">
            <summary>
            String 否 88888888888 收件人手机号(收件人电话、手机至少有一个不为空)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.postcode">
            <summary>
            String 否 100000 收件人邮编，长度：6
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.packageCount">
            <summary>
            Number 是 1 包裹数(大于0，小于1000)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.weight">
            <summary>
            Number 是 2.5 订单总重量(单位：kg，保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.vloumLong">
            <summary>
            Number 否 1 包裹长(单位：cm, 保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.vloumWidth">
            <summary>
            Number 否 1 包裹宽(单位：cm，保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.vloumHeight">
            <summary>
            Number 否 1 包裹高(单位：cm，保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.vloumn">
            <summary>
            Number 是 1 体积(单位：cm3，保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.description">
            <summary>
            String 否 衣服 商品描述
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.collectionValue">
            <summary>
            Number 否 1 是否代收货款(是：1，否：0。不填或者超出范围，默认是0)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.collectionMoney">
            <summary>
            Number 否 98.00 代收货款金额(保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.guaranteeValue">
            <summary>
            Number 	否 1 是否保价(是：1，否：0。不填或者超出范围，默认是0)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.guaranteeValueAmount">
            <summary>
            Number 否 100.00 保价金额(保留小数点后两位)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.signReturn">
            <summary>
            Number 否 1 签单返还(签单返还类型：0-不返单，1-普通返单，2-校验身份返单，3-电子签返单，4-电子返单+普通返单)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.aging">
            <summary>
            Number 否 1 时效(普通：1，工作日：2，非工作日：3，晚间：4。O2O一小时达：5。O2O定时达：6。不填或者超出范围，默认是1)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.transType">
            <summary>
            Number 否 1 运输类型(陆运：1，航空：2，3：高铁 不填默认是1)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.remark">
            <summary>
            String 否 JOS测试 运单备注，长度：20,说明：打印面单时备注内容也会显示在快递面单上
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.goodsType">
            <summary>
            Number 否 1 配送业务类型（ 1:普通，2:生鲜常温，5:鲜活，6:控温，7:冷藏，8:冷冻，9:深冷；21:医药冷藏，23:医药控温，24:医药常温，25:医药冷冻，27:医药深冷）默认是1；若是生鲜相关产品，则填写枚举2、5、6、7、8、9，若是医药相关产品，则填写21、23、24、25、27，否则不填或填1
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.orderType">
            <summary>
            Number 否 0 运单类型。(普通外单：0，O2O外单：1)默认为0
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.shopCode">
            <summary>
            String 	否 无 门店编码(只O2O运单需要传，普通运单不需要传)
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.orderSendTime">
            <summary>
            String 否 2099-09-18 08:30:00 预约配送时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.warehouseCode">
            <summary>
            String 否 无 发货仓编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.areaProvId">
            <summary>
            Number 否 1 接货省ID
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.areaCityId">
            <summary>
            Number 否 1 接货市ID
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.shipmentStartTime">
            <summary>
            Date 否 2099-09-18 08:30:00 配送起始时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.shipmentEndTime">
            <summary>
            Date 否 2099-09-18 08:30:00 配送结束时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.idNumber">
            <summary>
            String 否 无 身份证号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.addedService">
            <summary>
            String 否 settleType:0 扩展服务，说明：settleType 0、月结 1、到付，2、寄付
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.extendField1">
            <summary>
            String 否 无 扩展字段1
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.extendField2">
            <summary>
            String 否 无 扩展字段2
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.extendField3">
            <summary>
            String 否 无 扩展字段3
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.extendField4">
            <summary>
            Number 否 1 扩展字段4
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.extendField5">
            <summary>
            Number 否 1 扩展字段5
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.senderCompany">
            <summary>
            String 否 北京市大兴区亦庄经济开发区京东大厦 寄件人公司，长度：50，说明：不能为生僻字
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.receiveCompany">
            <summary>
            String 否 北京市大兴区亦庄经济开发区京东大厦 收件人公司，长度：50，说明：不能为生僻字
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.goods">
            <summary>
            String 否 服装、3C等 托寄物名称，长度：200，说明：为避免托运物品在铁路、航空安检中被扣押，请务必下传商品类目或名称，例如：服装、3C等
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.goodsCount">
            <summary>
            Number 否 1 寄托物数量
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.promiseTimeType">
            <summary>
            Number 否 1 产品类型（1：特惠送 2：特快送 4：城际闪送 7：微小件 8: 生鲜专送 16：生鲜特快 17、生鲜特惠 20:函数达 21：特惠包裹 24：特惠小件 22：医药冷链 26：冷链专送）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.freight">
            <summary>
            Number 否 1.0 运费
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.pickUpStartTime">
            <summary>
            Date 否 2099-09-18 08:30:00 预约取件开始时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.pickUpEndTime">
            <summary>
            Date 否 2099-09-18 08:30:00 预约取件结束时间（当pickUpStartTime不为空时，该值必传，且必须晚于pickUpStartTime）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.unpackingInspection">
            <summary>
            String 否 无 开箱验货标识（1：随心验(收费)，2：开商品包装验货，3：开物流包装验货，4：不支持开箱验货）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.boxCode">
            <summary>
            String[] 否 无 商家箱号,多个箱号请用逗号分隔，例如三个箱号为：a123,b456,c789
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.fileUrl">
            <summary>
            String 否 https://www.jd.com/ 函速达的文件地址，如果pickMethod是上门收货，则此字段可以不填
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.pickMethod">
            <summary>
            String 否 上门收货 取件方式（填写中文：【上门收货】或【自送】，不填写：商家无诉求，此字段无意义）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.customerBoxCode">
            <summary>
            String[] 否 1 客户箱型编号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.customerBoxNumber">
            <summary>
            Number[] 否 2 客户箱型箱数
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrder.salesChannel">
            <summary>
            String 否 274 销售渠道
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.collectionAddress">
            <summary>
            String 【集】石家庄鹿泉 集包地
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.sourceSortCenterId">
            <summary>
            Number 696270 始发分拣中心id
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.targetSortCenterId">
            <summary>
            Number 3074 目的分拣中心id
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.siteName">
            <summary>
            String *福州温泉营业部 站点名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.sourceCrossCode">
            <summary>
            String 61 始发道口号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.distributeCode">
            <summary>
            String 331 分拣中心代码
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.sourceTabletrolleyCode">
            <summary>
            String 331 始发笼车号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.isHideContractNumbers">
            <summary>
            Number 1 是否隐藏联系方式
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.isHideName">
            <summary>
            Number 1 是否隐藏姓名
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.targetTabletrolleyCode">
            <summary>
            String 05展二2 目的笼车号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.road">
            <summary>
            String 001 路区
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.siteId">
            <summary>
            Number 150788 站点id
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.aging">
            <summary>
            Number 0 时效
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.coverCode">
            <summary>
            String '' 水印
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.slideNo">
            <summary>
            String H 滑道号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.sourceSortCenterName">
            <summary>
            String 保定分拣中心 始发分拣中心名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.agingName">
            <summary>
            String 无时效 时效名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.targetSortCenterName">
            <summary>
             String 福州分拣中心 目的分拣中心名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.qrcodeUrl">
            <summary>
            https://mp.weixin.qq.com/a/~bdyFWnK5nG7Ly5w-xXbAYg~~
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCreateOrderRes.Presortresult.siteType">
            <summary>
            Number 4 站点类型
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongChunPeiLogistics.ClassGetWlInfo.newWBType">
            <summary>
            Number 	是 	0 	单号类型；0：商家订单号（下单传的orderno）；1：eclp单号（下单接口返回的ECO单号）；2：京东快递单号（下单接口返回的JD单号）
            </summary>
        </member>
        <member name="F:YJT.Logistics.JingDongChunPeiLogistics.ClassGetWlInfo.no">
            <summary>
            String 	是 	VA00040295430 	单号；与newWBType对应的单号，（orderno最大长度200）
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCancelOrder.endReasonName">
            <summary>
            String 是 终止原因， 填写：“客户取消服务单，终止取件”
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCancelOrder.endReason">
            <summary>
            Number 是 终止原因code, 填写 19
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCancelOrder.pickupCode">
            <summary>
            String 是 取件单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.ClassCancelOrder.source">
            <summary>
            String 是 来源，填写JOS
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.appKey">
            <summary>
            955D401634B395D4C9F12B7F09459EC0
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.appSecret">
            <summary>
            be9c77ae4dcf4f978b52db21cc50acc5
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.token">
            <summary>
            0add94177f0240368de621c80e759651kzdk
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.accUrl">
            <summary>
            请求京东的地址 https://api.jd.com/routerjson
            </summary>
        </member>
        <member name="P:YJT.Logistics.JingDongChunPeiLogistics.deptNo">
            <summary>
            商家编号
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics">
            <summary>
            中通快递
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.AppKey">
            <summary>
            APP令牌
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.AppSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.IsTest">
            <summary>
            是否采用测试模式
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.customid">
            <summary>
            客户帐号ZTO2501659425792481
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.customPwd">
            <summary>
            客户帐号的接口密码X8QC7J6A
            </summary>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="appKey"></param>
            <param name="appSecret"></param>
            <param name="customid">客户帐号ZTO2501659425792481</param>
            <param name="customPwd">客户帐号的接口密码X8QC7J6A</param>
            <param name="appKeyTest">测试令牌</param>
            <param name="appSecretTest">测试密钥</param>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.Init(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            初始化
            </summary>
            <param name="appKey">令牌080d5d838d7515fbb19a6</param>
            <param name="appSecret">密钥87a32ba9659648c4833667d4064436c6</param>
            <param name="isTest">是否采用测试模式</param>
            <param name="customid">客户帐号ZTO2501659425792481</param>
            <param name="customPwd">客户帐号的接口密码X8QC7J6A</param>
            <param name="appKeyTest">测试令牌ebede59da6d39b6ec1b02</param>
            <param name="appSecretTest">测试密钥9c66ffaaac4c07a7249031af29bc92e7</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateAccountInfo(System.String@,System.Nullable{System.Byte})">
            <summary>
            否 为accountInfo对象创建实例,创建账号信息
            </summary>
            <param name="type">否 1 单号类型:1.普通电子面单；74.星联电子面单；默认是1</param>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateSenderInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String)">
            <summary>
            创建发件人信息
            </summary>
            <param name="senderName">张三 发件人姓名</param>
            <param name="senderAddress">发件人详细地址</param>
            <param name="senderDistrict"></param>
            <param name="senderMobile"></param>
            <param name="senderProvince"></param>
            <param name="senderCity"></param>
            <param name="senderPhone"></param>
            <param name="errMsg">错误细节</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateReceiveInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String)">
            <summary>
            创建收件人信息
            </summary>
            <param name="receiverName">是 Jone Star 收件人姓名</param>
            <param name="receiverAddress">是 凤阳街XX路XX号 收件人详细地址</param>
            <param name="receiverPhone">否 021-87654321 收件人座机（与receiverMobile二者不能同时为空）</param>
            <param name="receiverProvince">是 河南省 收件人省</param>
            <param name="receiverCity">是 郑州市 收件人市</param>
            <param name="receiverDistrict">是 高新区 收件人区</param>
            <param name="errMsg"></param>
            <param name="receiverMobile">否 13500000000 收件人手机号（与 receiverPhone二者不能同时为空）</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateOrderVas(YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.EnumVasType,System.String@,System.String,System.Nullable{System.Int64})">
            <summary>
            创建一个增值项目
            </summary>
            <param name="vtype">类型</param>
            <param name="errMsg">错误原因</param>
            <param name="代收账号">代收账号（有代收货款增值时必填）</param>
            <param name="相关金额">增值价格，如果增值类型涉及金额会校验，vasType为COD、insured时不能为空，单位：分</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateSummaryInfo(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            否 创建汇总信息
            </summary>
            <param name="collectMoneyType">string 否 到达收取币种</param>
            <param name="freight">BigDecimal 否 20 运输费（单位：元）</param>
            <param name="orderSum"></param>
            <param name="otherCharges">BigDecimal 否 20 其他费用(单位:元)</param>
            <param name="packCharges">BigDecimal 否 10 包装费(单位:元)</param>
            <param name="premium">BigDecimal 否 10 险费（单位：元）</param>
            <param name="price">BigDecimal 否 30 商品总价值（单位：元）</param>
            <param name="quantity">integer 否 3 订单包裹内货物总数量</param>
            <param name="size">string 否 订单包裹大小（单位：厘米、格式：”长，宽，高”，用半角的逗号来分隔）</param>
            <param name="startTime">date 否 2020-12-10 12:00:00 取件开始时间</param>
            <param name="endTime">date 否 2020-12-10 14:00:00 取件截止时间</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.Intor(System.String,System.String,System.String,YJT.Logistics.ZhongTongLogistics,System.Boolean@,System.String@,System.String)">
            <summary>
            构造一个下传订单类
            </summary>
            <param name="partnerType">是  合作模式 ，1：集团客户；2：非集团客户</param>
            <param name="orderType">是 partnerType为1时，orderType：1：全网件 2：预约件。 partnerType为2时，orderType：1：全网件 2：预约件（返回运单号） 3：预约件（不返回运单号） 4：星联全网件</param>
            <param name="ztObj">对应中通快递的操作对象,用于取出相关信息</param>
            <param name="errMsg"></param>
            <param name="isOk"></param>
            <param name="remark">单据备注</param>
            <param name="danjbh">ERP单据编号唯一编号</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateOrderItems(System.String@,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            添加一个商品,OrderItem[] 否 物品信息
            </summary>
            <param name="name">string 否 货品名称</param>
            <param name="category">string 否 商品分类</param>
            <param name="material">string 否 商品材质</param>
            <param name="size">string 否 大小（长,宽,高）(单位：厘米), 用半角的逗号来分隔长宽高</param>
            <param name="weight">long 否 重量（单位：克)</param>
            <param name="unitprice">integer 否 单价(单位:元)</param>
            <param name="quantity">integer 否 货品数量</param>
            <param name="remark">string 否 货品备注</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.CreateCabinet(System.String@,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            添加机柜信息 Object 否 机柜信息
            </summary>
            <param name="errMsg"></param>
            <param name="address">string 否 地址</param>
            <param name="specification">int 否 格口规格 格口大小( 1 大 2 中 3 小）</param>
            <param name="code">string 否 开箱码</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassAccountInfo">
            <summary>
            账号信息 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassAccountInfo.accountId">
            <summary>
            string 否 test 电子面单账号（partnerType为2，orderType传1,2,4时必传）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassAccountInfo.customerId">
            <summary>
            string 否 GPG1576724269 客户编码（partnerType传1时必传）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassAccountInfo.type">
            <summary>
            short 否 1 单号类型:1.普通电子面单；74.星联电子面单；默认是1
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassAccountInfo.accountPassword">
            <summary>
            string 否 电子面单密码（测试环境传ZTO123）
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo">
            <summary>
            发件人信息 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderPhone">
            <summary>
            string 否 010-22226789 发件人座机（与senderMobile二者不能同时为空）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderName">
            <summary>
            string 是 张三 发件人姓名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderAddress">
            <summary>
            string 是 华志路 发件人详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderDistrict">
            <summary>
            string 是 青浦区 发件人区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderMobile">
            <summary>
            string 否 13900000000 发件人手机号（与senderPhone二者不能同时为空）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderProvince">
            <summary>
            string 是 上海 发件人省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSenderInfo.senderCity">
            <summary>
            string 是 上海市 发件人市
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo">
            <summary>
            收件人信息 是
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverCity">
            <summary>
            string 是 郑州市 收件人市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverAddress">
            <summary>
            string 是 凤阳街XX路XX号 收件人详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverPhone">
            <summary>
            string 否 021-87654321 收件人座机（与receiverMobile二者不能同时为空）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverName">
            <summary>
            string 是 Jone Star 收件人姓名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverDistrict">
            <summary>
            string 是 高新区 收件人区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverMobile">
            <summary>
            string 否 13500000000 收件人手机号（与 receiverPhone二者不能同时为空）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassReceiveInfo.receiverProvince">
            <summary>
            string 是 河南省 收件人省
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList">
            <summary>
            增值服务信息 否
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.EnumVasType">
            <summary>
            增值服务类别
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.accountNo">
            <summary>
            String 否 代收账号（有代收货款增值时必填）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.vasType">
            <summary>
            string 否 COD 增值类型 （COD：代收； vip：尊享； insured：保价； receiveReturnService：签单返回； twoHour：两小时；standardExpress：标快）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.vasAmount">
            <summary>
            long 否 100000 增值价格，如果增值类型涉及金额会校验，vasType为COD、insured时不能为空，单位：分
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.vasPrice">
            <summary>
            long 否 增值价格（暂时不用）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderVasList.vasDetail">
            <summary>
            string 否 增值详情
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo">
            <summary>
            汇总信息 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.collectMoneyType">
            <summary>
            string 否 到达收取币种
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.quantity">
            <summary>
            integer 否 3 订单包裹内货物总数量
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.premium">
            <summary>
            BigDecimal 否 10 险费（单位：元）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.size">
            <summary>
            string 否 订单包裹大小（单位：厘米、格式：”长，宽，高”，用半角的逗号来分隔）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.price">
            <summary>
            BigDecimal 否 30 商品总价值（单位：元）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.otherCharges">
            <summary>
            BigDecimal 否 20 其他费用(单位:元)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.freight">
            <summary>
            BigDecimal 否 20 运输费（单位：元）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.packCharges">
            <summary>
            BigDecimal 否 10 包装费(单位:元)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.startTime">
            <summary>
            date 否 2020-12-10 12:00:00 取件开始时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.endTime">
            <summary>
            date 否 2020-12-10 14:00:00 取件截止时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassSummaryInfo.orderSum">
            <summary>
            BigDecimal 否 23 保险费
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems">
            <summary>
            物品信息 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.name">
            <summary>
            string 否 货品名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.category">
            <summary>
            string 否 商品分类
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.material">
            <summary>
            string 否 商品材质
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.size">
            <summary>
            string 否 大小（长,宽,高）(单位：厘米), 用半角的逗号来分隔长宽高
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.weight">
            <summary>
            long 否 重量（单位：克)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.unitprice">
            <summary>
            integer 否 单价(单位:元)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.quantity">
            <summary>
            integer 否 货品数量
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassOrderItems.remark">
            <summary>
            string 否 货品备注
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassCabinet">
            <summary>
            机柜信息 否
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassCabinet.address">
            <summary>
            string 否 地址 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassCabinet.specification">
            <summary>
            int 否 格口规格 格口大小( 1 大 2 中 3 小）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.ClassCabinet.code">
            <summary>
            string 否 开箱码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.partnerType">
            <summary>
            2 string 是  合作模式 ，1：集团客户；2：非集团客户
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.orderType">
            <summary>
             1 string 是 partnerType为1时，orderType：1：全网件 2：预约件。 partnerType为2时，orderType：1：全网件 2：预约件（返回运单号） 3：预约件（不返回运单号） 4：星联全网件
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.partnerOrderCode">
            <summary>
            string 是 商家自主定义 合作商订单号 单据编号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.billCode">
            <summary>
            string 否 运单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.hallCode">
            <summary>
            string 否 S2044 门店/仓库编码（partnerType为1时可使用）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.accountInfo">
            <summary>
            AccountDto 否 账号信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.senderInfo">
            <summary>
            SenderInfoInput 是 发件人信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.receiveInfo">
            <summary>
            ReceiveInfoInput 是 收件人信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.orderVasList">
            <summary>
            OrderVasDto[] 否 增值服务信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.siteCode">
            <summary>
            string 否 02100 网点code（orderVasList.vasType为receiveReturnService必填）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.siteName">
            <summary>
            string 否 上海 网点名称（orderVasList.vasType为receiveReturnService必填）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.remark">
            <summary>
            string 否 小吉下单 备注
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.orderItems">
            <summary>
            OrderItem[] 否 物品信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrder.cabinet">
            <summary>
            Object 否 机柜信息
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes">
            <summary>
            下单返回对象
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result">
            <summary>
            OrderOutput 否 返回结果 对象
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.Bigmarkinfo">
            <summary>
            BigMarkInfoOutput 否 大头笔信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.Bigmarkinfo.bagAddr">
            <summary>
            string 否 合肥 集包地 福州
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.Bigmarkinfo.mark">
            <summary>
            string 否 460- 38 大头笔 210- A12 78
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.SignBillInfo">
            <summary>
            SignBillInfo 否 签单返回信息 对象 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.SignBillInfo.billCode">
            <summary>
            string 否 签单返回运单号 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.SignBillInfo.orderCode">
            <summary>
            string 否 签单返回订单号 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.bigMarkInfo">
            <summary>
            BigMarkInfoOutput 否 大头笔信息 对象
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.verifyCode">
            <summary>
            string 否 2小时取件码（当vasType增值信息中有twoHour的时候返回） null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.siteCode">
            <summary>
            string 否 02100 单号所属网点code（预约件）31230
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.signBillInfo">
            <summary>
            SignBillInfo 否 签单返回信息 对象 null
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.siteName">
            <summary>
            string 否 上海 单号所属网点名称（预约件） 保定涿州
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.orderCode">
            <summary>
            string 否 12123412434 订单号 220809116219290102
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.billCode">
            <summary>
            string 否 130005102254 运单号 73188243857826
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.Result.partnerOrderCode">
            <summary>
            string 否 43423424 合作商订ERP单号 SAR001
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.result">
            <summary>
            OrderOutput 否 返回结果 对象
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.message">
            <summary>
            string 否 字符串 返回信息 成功
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.statusCode">
            <summary>
            string 否 0000 返回code 0000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCreateOrderRes.status">
            <summary>
            Boolean 否 true 返回状态 true
            </summary>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.CreateOrder(YJT.Logistics.ZhongTongLogistics.ClassCreateOrder,System.Boolean@,System.String@,System.Int32@,System.String@,System.String@)">
            <summary>
            下单
            </summary>
            <param name="order"></param>
            <param name="isok"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="sd"></param>
            <param name="rd"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount">
            <summary>
            绑定电子面单与appKey的关系，以便下单或查询轨迹
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount.eaccount">
            <summary>
            string 是 1233 电子面单账号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount.siteCode">
            <summary>
            string 是 123 网点code
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount.address">
            <summary>
            string 是 北京/北京市/东城区 地址：省市区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount.addressDetail">
            <summary>
            string 是 17号 详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount.eaccountPwd">
            <summary>
            string 是 1233 电子面单密码
            </summary>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.BindingEaccount(YJT.Logistics.ZhongTongLogistics.ClassBindingEaccount,System.Boolean@,System.String@,System.Int32@,System.String@,System.String@)">
            <summary>
            第一步,绑定电子面单,用于下单
            </summary>
            <param name="order"></param>
            <param name="isok"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="sd"></param>
            <param name="rd"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfo.#ctor(System.Int32,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="type">integer 是 0 0，预约件 1，全网件</param>
            <param name="billCode">string 否 73110263178916 运单编号 运单和订单不能全为空</param>
            <param name="orderCode">string 否 200824000005397109 订单编号</param>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfo.type">
            <summary>
            integer 是 0 0，预约件 1，全网件
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfo.orderCode">
            <summary>
            string 否 200824000005397109 订单编号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfo.billCode">
            <summary>
            string 否 73110263178916 运单编号
            </summary>
        </member>
        <member name="T:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result">
            <summary>
            PreOrderInfoDto[] 否 返回订单详情实体
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.orderType">
            <summary>
            string 否 订单类型
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendCity">
            <summary>
            string 否 发件市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivName">
            <summary>
            string 否 收件人姓名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.orderRemark">
            <summary>
            string 否 订单备注
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.assignSite">
            <summary>
            string 否 分配网点
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.orderStatus">
            <summary>
            integer 否 订单状态（0：下单成功； 1：分配网点； 2：分配业务员； 3：业务员上门取件； -2订单取消； 99：订单完成）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendProv">
            <summary>
            string 否 发件省 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivPhone">
            <summary>
            string 否 收件人电话号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivCompany">
            <summary>
            string 否 收件人公司名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.assignEmpMobile">
            <summary>
            string 否 15800000000 分配业务员手机号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.orderCreateDate">
            <summary>
            string 否 下单时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivZipCode">
            <summary>
            string 否 收件人邮编
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.assignEmp">
            <summary>
            string 否 分配业务员
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivAddress">
            <summary>
            string 否 收件人详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelPackingFee">
            <summary>
            integer 否 包裹包装费(单位:分)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendMobile">
            <summary>
            string 否 发件人手机号码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.assignEmpCode">
            <summary>
            string 否 分配业务员Code
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelWeight">
            <summary>
            integer 否 包裹总重量 （克）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.cancelReason">
            <summary>
            string 否 客户取消-不想寄了 取消原因
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelOtherFee">
            <summary>
            integer 否 包裹其他费用(单位:分)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelQuantity">
            <summary>
            integer 否 包裹内货物总数量
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivMobile">
            <summary>
            string 否 收件人手机号码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendName">
            <summary>
            string 否 发件人姓名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivProv">
            <summary>
            string 否 收件人省
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivCity">
            <summary>
            string 否 收件人市
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.partnerName">
            <summary>
            string 否 渠道名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.assignSiteCode">
            <summary>
            string 否 分配网点code
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelFreight">
            <summary>
            integer 否 包裹运输费(单位:分)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendCompany">
            <summary>
            string 否 发件人公司名
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendCounty">
            <summary>
            string 否 发件区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.vasCollectCurrency">
            <summary>
            string 否 到达收取币种
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelTakingEndTime">
            <summary>
            string 否 预约取件结束时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.billCode">
            <summary>
            string 否 运单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelPrice">
            <summary>
            integer 否 包裹中商品总价值(分)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendAddress">
            <summary>
            string 否 发件人详细地址
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.vasCollectSum">
            <summary>
            integer 否 到达收取金额
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.secStatus">
            <summary>
            int 否 1 取消类型
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.receivCounty">
            <summary>
            string 否 收件人区
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelTakingStartTime">
            <summary>
            string 否 预约取件开始时间
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendPhone">
            <summary>
            string 否 发件人电话号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelOrderSum">
            <summary>
            integer 否 订单总金额(单位:分)
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.orderCode">
            <summary>
            string 否 订单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.parcelSize">
            <summary>
            string 否 订单包裹大小（厘米）, 用半角的逗号来分隔长宽高
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.partnerId">
            <summary>
            string 否 Y渠道Id
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.sendZipCode">
            <summary>
            string 否 发件人邮编
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.Result.tradeId">
            <summary>
            string 否 交易号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.result">
            <summary>
            PreOrderInfoDto[] 否 返回订单详情实体 对象,
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.message">
            <summary>
            string 否 字符串 返回信息 操作成功
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.statusCode">
            <summary>
            string 否 0000 返回code  SYS000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfoRes.status">
            <summary>
            Boolean 否 true 返回状态 true
            </summary>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.GetOrderInfo(YJT.Logistics.ZhongTongLogistics.ClassGetOrderInfo,System.Boolean@,System.String@,System.Int32@,System.String@,System.String@)">
            <summary>
            获取物流单号下单详情
            </summary>
            <param name="order"></param>
            <param name="isok"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="sd"></param>
            <param name="rd"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrder.#ctor(System.Int32,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="cancelType">1 取消类型 1不想寄了,2下错单,3重复下单,4运费太贵,5无人联系,6取件太慢,7态度差</param>
            <param name="billCode">string 否 73110263178916 运单编号</param>
            <param name="orderCode">string 否 200824000005397109 订单编号</param>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrder.cancelType">
            <summary>
            string 是 1 取消类型 1不想寄了,2下错单,3重复下单,4运费太贵,5无人联系,6取件太慢,7态度差
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrder.orderCode">
            <summary>
            string 否 200824000005397109 订单编号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrder.billCode">
            <summary>
            string 否 73110263178916 运单编号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrderRes.message">
            <summary>
            string 否 字符串 返回信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrderRes.statusCode">
            <summary>
            string 否 0000 返回code
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrderRes.status">
            <summary>
            Boolean 否 true 返回状态
            </summary>
        </member>
        <member name="P:YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrderRes.result">
            <summary>
            Object 否 返回结果
            </summary>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.CancelPreOrder(YJT.Logistics.ZhongTongLogistics.ClassCancelPreOrder,System.Boolean@,System.String@,System.Int32@,System.String@,System.String@)">
            <summary>
            取消订单
            </summary>
            <param name="order"></param>
            <param name="isok"></param>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <param name="sd"></param>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Logistics.ZhongTongLogistics.SenderControl(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.Boolean@)">
            <summary>
            内部调用发送引擎
            </summary>
            <param name="sendJson">要发送的JSON</param>
            <param name="sendUrl">要发送到哪个接口</param>
            <param name="errMsg">发送的状态消息</param>
            <param name="isOk">发送是否成功</param>
            <param name="recvData">发送的数据</param>
            <param name="sendData">接收的数据</param>
            <param name="sendType">发送类型,下单,查询,取消等</param>
            <returns>接收的数据</returns>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.AppKey">
            <summary>
            APPkey CAKYnBVqIIaiFYf
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.SecretKey">
            <summary>
            SecretKey 密钥 A11TgLxfVkJKIu1XYyuIrdEbC6v8DC6I
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ResourceCode">
            <summary>
            资源Code CAKYnBVqIIaiFYf
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.FromOrderCode">
            <summary>
            订单来源编码 HDDS
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.SiteCode">
            <summary>
            网点编码必传，测试传值"siteCode":"666666",
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.CustomerName">
            <summary>
            客户编码 测试传值"customerName":"666666000001"
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.SitePwd">
            <summary>
            电子面单密码，测试传值"sitePwd":"abc123"
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.IsTest">
            <summary>
            是否使用测试模式
            </summary>
        </member>
        <member name="M:YJT.Logistics.ShenTongLogistic.Init(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="appKey">CAKYnBVqIIaiFYf</param>
            <param name="secreKey">A11TgLxfVkJKIu1XYyuIrdEbC6v8DC6I</param>
            <param name="resourceCode">资源CodeCAKYnBVqIIaiFYf</param>
            <param name="formOrderCode">订单来源编码HDDS</param>
            <param name="isTest">是否使用测试模式</param>
            <param name="customerName">客户编码</param>
            <param name="siteCode">网点编码</param>
            <param name="sitePwd">电子面单密码</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassPostData">
            <summary>
            公共参数用
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.api_name">
            <summary>
            API名称 英文 OMS_EXPRESS_ORDER_CREATE
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.content">
            <summary>
            结构化的业务报文体，可以是JSON或XML格式的字串（见下文表格及示例）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.from_appkey">
            <summary>
            订阅方/请求发起方的应用key
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.from_code">
            <summary>
            订阅方/请求发起方的应用资源code
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.to_appkey">
            <summary>
            sto_oms
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.to_code">
            <summary>
            sto_oms
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassPostData.data_digest">
            <summary>
            报文签名。详情请参考：对接订阅API
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder">
            <summary>
            创建订单
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender">
            <summary>
            SenderDO true 寄件人信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.name">
            <summary>
            string true 寄件人名称 测试名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.tel">
            <summary>
            string false 寄件人固定电话 0558-45778586
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.mobile">
            <summary>
            string false 寄件人手机号码 18775487548
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.postCode">
            <summary>
            string false 邮编 100001
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.country">
            <summary>
            string false 国家 中国
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.province">
            <summary>
            string true 省 安徽
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.city">
            <summary>
            string true 市 合肥
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.area">
            <summary>
            string true 区 泸州
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.town">
            <summary>
            string false 镇 测试镇
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Sender.address">
            <summary>
            string true 详细地址 XX街道XX小区XX楼888
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver">
            <summary>
            ReceiverDO true 收件人信息 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.name">
            <summary>
            string true 收件人名称 测试名称
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.tel">
            <summary>
            string false 收件人固定电话 0556-45778586
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.mobile">
            <summary>
            string false 收件人手机号码 15575487548
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.postCode">
            <summary>
            string false 邮编 100001
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.country">
            <summary>
            string false 国家 中国
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.province">
            <summary>
            string true 省 河北
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.city">
            <summary>
            string true 市 湖州
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.area">
            <summary>
            string true 区 江汉
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.town">
            <summary>
            string false 镇 收件镇
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Receiver.address">
            <summary>
            string true 详细地址 XX街道XX小区XX楼666
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo">
            <summary>
            CargoDO true 包裹信息
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList">
            <summary>
             list[] false 小包信息（国际业务专用，其他业务不需要填写） ***
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.serialNumber">
            <summary>
            string true 小包号 8451234
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.referenceNumber">
            <summary>
            string false 关联单号 88838783634
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.productId">
            <summary>
            string false 商品ID 001
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.name">
            <summary>
            string false 名称 小商品
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.qty">
            <summary>
            int false 数量 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.unitPrice">
            <summary>
            double false 单价 1
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.amount">
            <summary>
            double false 总价 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.currency">
            <summary>
            string false 币种 美元
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.weight">
            <summary>
            double false 重量(kg) 10.00 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.CargoItemList.remark">
            <summary>
            string false 备注 无备注 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.battery">
            <summary>
            string true 带电标识 （10/未知 20/带电 30/不带电）10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.goodsType">
            <summary>
            string true 物品类型（大件、小件、扁平件\文件） 大件
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.goodsName">
            <summary>
            string true 物品名称 XX物
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.goodsCount">
            <summary>
            int false 物品数量 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.spaceX">
            <summary>
            double false 长（cm） 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.spaceY">
            <summary>
            double false 宽(cm) 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.spaceZ">
            <summary>
            double false 高(cm) 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.weight">
            <summary>
            double false 重量(kg) 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.goodsAmount">
            <summary>
            string false 商品金额 100
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Cargo.cargoItemList">
            <summary>
            list[] false 小包信息（国际业务专用，其他业务不需要填写） ***
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Customer">
            <summary>
            CustomerDO false 客户信息，在线下单取运单号必填，代单号下单不需要填写，测试账号传值如下，生产账号联系合作业务方提供 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Customer.siteCode">
            <summary>
            string true 网点编码必传，测试传值"siteCode":"666666", 重固镇Sto网点
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Customer.customerName">
            <summary>
            string true 客户编码，测试传值"customerName":"666666000001" 重固镇Sto网点
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Customer.sitePwd">
            <summary>
            string true 电子面单密码，测试传值"sitePwd":"abc123" ***
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.Customer.monthCustomerCode">
            <summary>
            string false 月结客户编码（不传单号需调度才传月结编号）如果填写一般和客户编号值相同 9000000
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InternationalAnnex">
            <summary>
            InternationalAnnexDO false 国际订单附属信息（国际业务订单必填，其他业务不要填写） 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InternationalAnnex.internationalProductType">
            <summary>
            string true 国际业务类型（01-国际进口，02-国际保税，03-国际直邮) 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InternationalAnnex.customsDeclaration">
            <summary>
            boolean true 是否报关，默认为否 false
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InternationalAnnex.senderCountry">
            <summary>
            string true 发件人所在国家，国际件为必填字段 中国
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InternationalAnnex.receiverCountry">
            <summary>
            string true 收件人所在国家，国际件为必填字段 俄罗斯
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.AssignAnnex">
            <summary>
            AssignAnnex false 指定网点揽收（调度散单业务订单需要传）其他业务不需要
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.AssignAnnex.takeCompanyCode">
            <summary>
            string true 指定取件的网点编号 862456565466
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.AssignAnnex.takeUserCode">
            <summary>
            string false 指定取件的业务员编号（指定业务员时takeCompanyCode可传可不传，若传必须传正确，举例：寄件地址是上海，只能是指定上海业务员取件）9000000007
            </summary>
        </member>
        <member name="T:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InsuredAnnex">
            <summary>
            InsuredAnnexDo false 保价模型（保价服务必填）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InsuredAnnex.insuredValue">
            <summary>
            string false 保价金额，单位：元（保价服务时必填，精确到小数点后两位） 6.66
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.InsuredAnnex.goodsValue">
            <summary>
            string false 物品价值，单位：元（保价服务时必填，精确到小数点后两位） 6.66
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.orderNo">
            <summary>
            string true 订单号（客户系统自己生成，唯一） 8885452262
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.orderSource">
            <summary>
            string true 订单来源（订阅服务时填写的来源编码） ****
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.billType">
            <summary>
            string true 获取面单的类型（00-普通、03-国际、01-代收、02-到付、04-生鲜），默认普通业务，如果有其他业务先与业务方沟通清楚 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.orderType">
            <summary>
            string true 订单类型（01-普通订单、02-调度订单）默认01-普通订单，如果有散单业务需先业务方沟通清楚 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.receiver">
            <summary>
            ReceiverDO true 收件人信息 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.cargo">
            <summary>
            CargoDO true 包裹信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.customer">
            <summary>
            CustomerDO false 客户信息，在线下单取运单号必填，代单号下单不需要填写，测试账号传值如下，生产账号联系合作业务方提供 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.internationalAnnex">
            <summary>
            InternationalAnnexDO false 国际订单附属信息（国际业务订单必填，其他业务不要填写） 
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.waybillNo">
            <summary>
            string false 运单号（下单前已获取运单号时必传，否则不传或传NULL） 59635456632
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.assignAnnex">
            <summary>
            AssignAnnex false 指定网点揽收（调度散单业务订单需要传）其他业务不需要
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.codValue">
            <summary>
            string false 代收货款金额，单位：元（代收货款业务时必填）2000
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.freightCollectValue">
            <summary>
            string false 到付运费金额，单位：元（到付业务时必填） 20
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.timelessType">
            <summary>
            string false 时效类型（01-普通）01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.productType">
            <summary>
            string false 产品类型 （01-普通、02-冷链、03-生鲜）01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.serviceTypeList">
            <summary>
            list[] false 增值服务（DELIVER_CONTACT-派前电联,TRACE_PUSH-轨迹回传;PRIVACY_SURFACE_SINGLE-隐私面单标） ***
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.extendFieldMap">
            <summary>
            map1[] false 拓展字段 mapValue string false 注意事项:属性值有逗号等于号需过滤掉 ***
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.remark">
            <summary>
            string false 备注 无备注
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.expressDirection">
            <summary>
            string false 快递流向（01-正向订单)默认01 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.createChannel">
            <summary>
            string false 创建原因（01-客户创建）默认01 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.regionType">
            <summary>
            string false 区域类型（01-国内）默认01 01
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.insuredAnnex">
            <summary>
            InsuredAnnexDo false 保价模型（保价服务必填）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.expectValue">
            <summary>
            string false 预估费用（散单业务使用） 10
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrder.payModel">
            <summary>
            string false 支付方式（1-现付；2-到付；3-月结） 1
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.orderNo">
            <summary>
            string false 订单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.packagePlace">
            <summary>
            string false 集包地
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.bigWord">
            <summary>
            string false 大字/三段码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.waybillNo">
            <summary>
            string false 运单号
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.sourceOrderId">
            <summary>
            string false 客户订单号（调度订单时返回客户订单号，非调度订单不返回该值）
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.Data.safeNo">
            <summary>
            string false 安全号码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.success">
            <summary>
            boolean true 是否成功 true
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.errorCode">
            <summary>
            string false 错误编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCreateOrderRes.errorMsg">
            <summary>
            string false 错误信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.sourceOrderId">
            <summary>
            string false 客户订单号（与运单号二者必传其一）ps：最好使用运单号进行取消 8823333301
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.billCode">
            <summary>
            string false 运单号（与客户订单号必传其一） ps：最好使用运单号进行取消 884000123556467
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.orderSource">
            <summary>
            string true 订单来源 KB
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.remark">
            <summary>
            string false 备注 客户要求取消
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.creater">
            <summary>
            string false 取消人姓名 刘能
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrder.orderType">
            <summary>
            string true 02:调度订单（默认值），01：普通订单 02
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrderRes.success">
            <summary>
            boolean true 是否成功 true
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrderRes.errorCode">
            <summary>
            string false 错误编码
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrderRes.errorMsg">
            <summary>
            string false 错误信息
            </summary>
        </member>
        <member name="P:YJT.Logistics.ShenTongLogistic.ClassCancelOrderRes.data">
            <summary>
            string false 成功返回 成功
            </summary>
        </member>
        <member name="T:YJT.MSystem.SystemShutdown">
            <summary>
            有关系统关机操作
            </summary>
        </member>
        <member name="F:YJT.MSystem.SystemShutdown._hand">
            <summary>
            用于单例
            </summary>
        </member>
        <member name="F:YJT.MSystem.SystemShutdown._isPreventShutdownOff">
            <summary>
            是否启用了系统关机拦截功能
            </summary>
        </member>
        <member name="P:YJT.MSystem.SystemShutdown.PreventShutdownOffCallBackAct">
            <summary>
            设置一个委托,当系统关闭时候所做的操作
            </summary>
        </member>
        <member name="M:YJT.MSystem.SystemShutdown.Init">
            <summary>
            构造关机对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.MSystem.SystemShutdown.PreventShutdownOff(System.Boolean)">
            <summary>
            阻止系统关机
            </summary>
            <param name="allow">true,表示为阻止系统关机</param>
        </member>
        <member name="M:YJT.MSystem.SystemShutdown.ShutdownOff(System.Boolean)">
            <summary>
            调用api关闭计算机系统
            </summary>
            <param name="shutdown">true 表示执行关机</param>
        </member>
        <member name="M:YJT.MSystem.SystemShutdown.Reset(System.Boolean)">
            <summary>
            调用api关闭计算机系统
            </summary>
            <param name="shutdown">true 表示执行关机</param>
        </member>
        <member name="M:YJT.MSystem.Common.MutexCheck(System.String,System.UInt32@,System.UInt32)">
            <summary>
            检测一个互斥体是否存在
            </summary>
            <param name="tag">互斥体标记</param>
            <param name="li">如果成功,返回当前第几个访问,否则返回0</param>
            <param name="count">允许最大互斥体的个数</param>
            <returns>是否创建成功互斥体对象</returns>
        </member>
        <member name="M:YJT.MSystem.GC.Collect">
            <summary>
            回收系统资源
            </summary>
        </member>
        <member name="M:YJT.MSystem.SysInfo.GetComputerName">
            <summary>
            获取计算机名
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.MWinForm.APIFunction">
            <summary>
            统一声明winAPI函数
            </summary>
        </member>
        <member name="M:YJT.MWinForm.APIFunction.ReleaseCapture">
            <summary>
            捕获鼠标事件高级,支持MOVE
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.MWinForm.APIFunction.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            发送窗体消息
            </summary>
            <param name="hwnd"></param>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.MWinForm.APIFunction.ShowWindow(System.Int32,System.Int32)">
            <summary>
            窗体显示
            </summary>
            <param name="hwnd"></param>
            <param name="nCmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.MWinForm.APIFunction.FindWindow(System.String,System.String)">
            <summary>
            查找窗口 
            </summary>
            <param name="lpClassName"></param>
            <param name="lpWindowName"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.MWinForm.MWinFormOperations">
            <summary>
            操作本程序界面窗口
            </summary>
        </member>
        <member name="F:YJT.MWinForm.MWinFormOperations.WM_SYSCOMMAND">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.MWinForm.MWinFormOperations.SC_MOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.MWinForm.MWinFormOperations.HTCAPTION">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.HideForm">
            <summary>
            隐藏窗体
            </summary>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.ShowForm">
            <summary>
            显示窗体
            </summary>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.FunVoidBindMoveWindow(System.Windows.Forms.Control)">
            <summary>
            绑定控件通过鼠标移动窗体
            </summary>
            <param name="controlTarget">鼠标拖拽的对象</param>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.FunVoidHideTaskBar(System.Boolean)">
            <summary>
            隐藏窗口在任务栏(程序显示的地方)
            </summary>
            <param name="isHide">是否隐藏</param>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.#ctor(System.Windows.Forms.Control)">
            <summary>
            构造这个对象,这个对象针对哪个窗体
            </summary>
            <param name="windowObj">一般为THIS</param>
        </member>
        <member name="P:YJT.MWinForm.MWinFormOperations.PreventClose">
            <summary>
            设置或获取窗口是否不允许直接关闭
            </summary>
        </member>
        <member name="P:YJT.MWinForm.MWinFormOperations.TransparentForm">
            <summary>
            设置窗体透明度
            </summary>
        </member>
        <member name="T:YJT.MWinForm.MWinFormOperations.degaa">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.FadeOut(System.Double,System.Int32,YJT.MWinForm.MWinFormOperations.degaa)">
            <summary>
            窗体渐隐
            </summary>
            <param name="要达到的透明度">最小的透明度</param>
            <param name="总体秒">渐隐操作持续时间</param>
            <param name="callBack"></param>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="P:YJT.MWinForm.MWinFormOperations.GetNotifyICON">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.ShowNotifyICON(System.String,System.Drawing.Icon,System.Windows.Forms.ToolTipIcon)">
            <summary>
            向系统的状态栏增加一个图标
            </summary>
            <param name="mouseText"></param>
            <param name="ico">可以指定为null,如果为null,则用默认图标</param>
            <param name="icoType">显示ICO的样式</param>
        </member>
        <member name="M:YJT.MWinForm.MWinFormOperations.HideWindowControlButton(YJT.MWinForm.MWinFormOperations.EnumControlButtons,System.Boolean)">
            <summary>
            隐藏标题栏的按钮
            </summary>
            <param name="btn"></param>
            <param name="isHide"></param>
        </member>
        <member name="T:YJT.MWinForm.SystemWindows">
            <summary>
            相关WINDOWS的窗体操作
            </summary>
        </member>
        <member name="M:YJT.MWinForm.SystemWindows.FunVoidHideFullTaskBar(System.Boolean)">
            <summary>
            是否隐藏任务栏
            </summary>
            <param name="isHide"></param>
        </member>
        <member name="T:YJT.MWinForm.TextboxControl">
            <summary>
            文本框操作
            </summary>
        </member>
        <member name="M:YJT.MWinForm.TextboxControl.TextBoxAddCtrlAFullSelect(System.Windows.Forms.TextBox)">
            <summary>
            允许文本框通过Ctrl+A全选
            </summary>
            <param name="tb"></param>
        </member>
        <member name="T:YJT.NetWork.NetTools">
            <summary>
            有关网络的静态工具
            </summary>
        </member>
        <member name="M:YJT.NetWork.NetTools.Ping(System.String,System.String,System.Int32,System.Int32,System.Action{System.String,System.Int64})">
             <summary>
             简单pingIP,返回是否在线,返回值如果是long.MaxValue,则不在线或无法ping通\r\n
             如果需要平均,最大,最小等信息,可自行在委托中搞定\r\n
            例如: Console.WriteLine(ipt.Ping("www.baidu.com",pd:(x)=> { Console.WriteLine(x.ToString()); },pingCount:1000).ToString());
             </summary>
             <param name="ip">要ping的ip地址,可以是能解析的域名地址</param>
             <param name="data">要发送的数据内容</param>
             <param name="timeOut">设置一个超时时间,毫秒</param>
             <param name="pingCount">需要反复调用多少次委托,如果不设置委托,此参数无效</param>
             <param name="action">设置一个委托,用于每次ping之后所做的操作</param>
             <returns>返回最后一次的响应时间,毫秒数</returns>
        </member>
        <member name="M:YJT.NetWork.NetTools.FunListGetNetInterfaces">
             <summary>
             返回本地计算机网卡相关信息
             [
            {
            "MAC":"B025AA264496",
            "Description":"Realtek PCIe GBE Family Controller",
            "Name":"本地连接",
            "Speed":"100000000",
            "Status":"Up",
            "ID":"{A7B9FFDA-C91A-47BE-A9A6-013E7E6DD60C}",
            "Gateways":"fe80::1%13|192.168.1.1|192.168.101.1|192.168.10.254|",
            "DNS":"fe80::1%13|8.8.8.8|8.8.4.4|",
            "DhcpServer":"",
            "IPV4S":"192.168.1.5|192.168.10.5|192.168.101.5|",
            "IPV6S":"2409:8a04:5a4f:5fa0:4bc:9d19:79eb:7615|2409:8a04:5a4f:5fa0:b1d1:a82d:232d:7298|fe80::4bc:9d19:79eb:7615%13|"
            },.....
            ]
             </summary>
             <returns></returns>
        </member>
        <member name="M:YJT.NetWork.NetTools.FunListGetNetInterfaces2(System.Boolean)">
            <summary>
            通过wmi返回本地计算机网卡相关信息2
            MACAddress,IPAddress,IPEnabled
            </summary>
            <param name="onlyOnLine">是否只显示在线的网络设备</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Number.Currency.EnumMoneyUnit">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.元">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.角">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.分">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.厘">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.毫">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.丝">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.忽">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.微">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.Number.Currency.EnumMoneyUnit.尘">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Number.Currency.Convert.FunDoubleGetFen(System.Double,YJT.Number.Currency.EnumMoneyUnit)">
            <summary>
            有损转换,把DOUBLE形式的金额转化为正INT形
            </summary>
            <param name="d"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Number.Currency.Convert.FunDoubleGetMoneyByInt(System.Double,YJT.Number.Currency.EnumMoneyUnit,YJT.Number.Currency.EnumMoneyUnit,System.Int32)">
            <summary>
            理论无损转换,把一个金额单位转换为另一个金额单位
            </summary>
            <param name="d">要转换的金额</param>
            <param name="inUnit">传进来的金额单位</param>
            <param name="outUnit">传出去的金额单位默认为元</param>
            <param name="accuracy">保留精度,默认为2,-1表示原值输出,使用Banker'sRound银行家舍入,即四舍六入五取偶。</param>
            <returns></returns>
        </member>
        <member name="T:YJT.Number.Numeric.Verification">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Number.Numeric.Verification.FunBoolIsRequirement(System.Double,System.Int32)">
            <summary>
            判断小数精度位数是否满足要求,,1.5是返回符合
            </summary>
            <param name="s"></param>
            <param name="accuracy"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Number.Numeric.Verification.IsBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断一个数是否介于两个数之间,包含等于
            </summary>
            <param name="s"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Number.Numeric.Convert.Round(System.Double,System.Int32)">
            <summary>
            标准的四舍五入
            </summary>
            <param name="s"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.OtherService.你好现在佳薪棠.#ctor(System.Int32)">
            <summary>
            构造对象
            </summary>
            <param name="sendType">1 测试模式,2 生产模式</param>
        </member>
        <member name="F:YJT.OtherService.你好现在佳薪棠._mchPrivateKey">
            <summary>
            平台私钥
            </summary>
        </member>
        <member name="P:YJT.OtherService.你好现在佳薪棠.MchPrivateKey">
            <summary>
            平台私钥
            </summary>
        </member>
        <member name="F:YJT.OtherService.你好现在佳薪棠._platformPublicKey">
            <summary>
            平台公钥
            </summary>
        </member>
        <member name="P:YJT.OtherService.你好现在佳薪棠.PlatformpublicKey">
            <summary>
            平台公钥
            </summary>
        </member>
        <member name="T:YJT.OtherService.龙邦5S温湿度操作类.SendDateClass">
            <summary>
            发送数据类
            </summary>
        </member>
        <member name="T:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate">
            <summary>
            接受数据类
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.customerCode">
            <summary>
            客户编码 "580051462504217366"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.companyCode">
            <summary>
            公司编码 "130603843122788865"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.hostCode">
            <summary>
            主机编码 "867282031160183"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.meterCode">
            <summary>
            仪表代码 "00"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.temperature">
            <summary>
            温度 6.7
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.humidity">
            <summary>
            湿度 0
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.collectionTime">
            <summary>
            采集时间 "1632849749"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.lat">
            <summary>
            纬度,百度坐标系,hostCode为车载设备有值 "0.0"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.lng">
            <summary>
            经度,百度坐标系,hostCode为车载设备有值 "0.0"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.addrName">
            <summary>
            地址,门牌号有地址,才可以显示 ""
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.ListClass.ultraviolet_r_status">
            <summary>
            紫外线开关 0关,1开 设备支持才有 0
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.pageNo">
            <summary>
            当前页码 "1"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.pageSize">
            <summary>
            每页记录数 "10"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.recordCount">
            <summary>
            总条数 "17"
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.pageCount">
            <summary>
            总页数 "17"
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.DataClass.list">
            <summary>
            详细记录
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.code">
            <summary>
            错误代码 "0"正常
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.msg">
            <summary>
            返回消息 "success" 成功
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.ReceiveDate.data">
            <summary>
            主数据,
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._companyCode">
            <summary>
            企业编码 130603843122788865 全部都是
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._hostCode">
            <summary>
            主机编号 867282031160183 一个设备一个编号
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._meterCode">
            <summary>
            仪表编号 00 全部都是
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._customerCode">
            <summary>
            客户编码 580051462504217366 全部一样
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._currentPage">
            <summary>
            当前页 从1开始
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._pageSize">
            <summary>
            每页记录数 最大100
            </summary>
        </member>
        <member name="F:YJT.OtherService.龙邦5S温湿度操作类._sign">
            <summary>
            签名密钥 1e75e4e77c874a30bf10c6db9057c84f 龙邦公司提供给客户的
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.endTime">
            <summary>
            yyyy-MM-dd HH:mm:ss,间隔30天
            </summary>
        </member>
        <member name="P:YJT.OtherService.龙邦5S温湿度操作类.startTime">
            <summary>
            yyyy-MM-dd HH:mm:ss ,间隔30天
            </summary>
        </member>
        <member name="M:YJT.OtherService.龙邦5S温湿度操作类.GetWdInfo">
            <summary>
            获取记录temperature温度,humidity湿度,lat纬度,lng精度,ultraviolet_r_status紫外开关0关1开,addrName地址,collectionTime日期,datetimeLong 时间戳
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.OtherService.龙邦5S温湿度操作类.CreateSign(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.String)">
            <summary>
            创建签名改
            </summary>
            <param name="dic">准备的数据</param>
            <param name="sign">厂家发的验证码</param>
            <returns></returns>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.明细原数据Base.QYID">
            <summary>
            *无需指定,从类中自动读取,String	50	企业编号	（必填）中心端提供,实例对象时候未初始化,则按创建对象的属性获取BussinessNo内容
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.ID">
            <summary>
            数据库中的记录ID
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.CDID">
            <summary>
            String	14	测点编号	（必填）中心端提供
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.WDXX">
            <summary>
            String	10	温度下限	（必填）
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.WDSX">
            <summary>
            String	10	温度上限	（必填）
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.DTTIME">
            <summary>
            String	20	设备采集时间	（必填）格式：yyyy-mm-dd hh24:mi:ss
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.WENDU">
            <summary>
            String	10	温度	（必填）
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.SJLX">
            <summary>
            String	1	数据类型	（必填）1：正常记录,2：报警记录
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.CDZT">
            <summary>
            String	1	测点使用状态	（必填）1：正常,4：闲置（空置）,6：释冷,9：验证,
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.YSKSTIME">
            <summary>
            String	20	本次运输开始时间	格式：yyyy-mm-dd hh24:mi:ss
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.保温箱明细原数据.YSJSTIME">
            <summary>
            String	20	本次运输结束时间	格式：yyyy-mm-dd hh24:mi:ss
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.ID">
            <summary>
            数据库中的记录ID
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.CDID">
            <summary>
            String	14	测点编号	（必填）中心端提供
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.DTTIME">
            <summary>
            String	20	设备采集时间	（必填）格式：yyyy-mm-dd hh24:mi:ss
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.WENDU">
            <summary>
            String	10	温度	（必填）
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.SHIDU">
            <summary>
            String	10	湿度	（必填）
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.FSFS">
            <summary>
            String	10	发送方式 必填 1：短信 2：微信 3：其他
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.FSZT">
            <summary>
            String	10	发送状态（必填）短信/微信的发送状态：1：成功 2：失败
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.报警处理情况数据.CLQK">
            <summary>
            String	1	处理情况	2000字符
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.BussinessNo">
            <summary>
            企业编号
            </summary>
        </member>
        <member name="P:YJT.OtherService.药监局温度上传.SecretKey">
            <summary>
            电子密钥 药监局提供
            </summary>
        </member>
        <member name="M:YJT.OtherService.药监局温度上传.报警处理情况(System.Collections.Generic.List{YJT.OtherService.药监局温度上传.报警处理情况数据},System.String@,System.Int32@)">
            <summary>
            保温箱数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.OtherService.药监局温度上传.保温箱记录(System.Collections.Generic.List{YJT.OtherService.药监局温度上传.保温箱明细原数据},System.String@,System.Int32@)">
            <summary>
            保温箱数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.OtherService.药监局温度上传.CreateAccessKey(System.String@,System.Int32@)">
            <summary>
            返回access-Key,企业编号-时间戳-Sign
            </summary>
            <param name="errMsg"></param>
            <param name="errCode"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Path">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.Path.FunClassGetMaxDrive">
            <summary>
            获取本机磁盘剩余空间最多的磁盘
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Path.FunStrFormatFolderPath(System.String)">
            <summary>
            格式化文件夹的路径,/改成\,并未文件夹末尾追加\,如果原路径有错误,返回空字符串
            </summary>
            <param name="oldPath">要格式化的字符串</param>
            <returns>格式化后的字符串</returns>
        </member>
        <member name="M:YJT.Path.FunStrGetLocalPath">
            <summary>
            获取当前应用程序路径,可返回IIS的路径或程序所在路径
            </summary>
            <returns>x:/xxx/</returns>
        </member>
        <member name="M:YJT.Path.GetWebHostStr">
            <summary>
            获取web访问时候 协议://主机名:端口 的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Path.GetTempFilePath(System.String,System.String,System.String)">
            <summary>
            获取一个不存在的临时文件名路径("txt", "aa")
            C:\Users\Administrator\AppData\Local\Temp\aa2018032009541070991111458645976B939197FE4E748ECB6C8876C318D052D.txt
            </summary>
            <param name="ExtName">扩展名</param>
            <param name="startName">文件前缀</param>
            <param name="basePath">指定路径,赋值后,文件路径不再是临时文件夹</param>
            <returns>临时文件夹+文件前缀+时间戳+随机数+guid</returns>
        </member>
        <member name="M:YJT.Path.GetTempFIlePathPrivate(System.String,System.String,System.String)">
            <summary>
            生成拼接文件名,内部调用,不检测文件是否存在
            </summary>
            <param name="ExtName"></param>
            <param name="startName"></param>
            <param name="basePath">指定路径,赋值后,文件路径不再是临时文件夹</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Path.MoveFile(System.String,System.String@,System.Int32)">
            <summary>
            只移动一个文件
            </summary>
            <param name="path">源文件</param>
            <param name="newPath">目的文件名</param>
            <param name="option">相同文件的处置办法</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Path.FunLongGetFolderSize(System.String,System.Int64)">
            <summary>
            返回文件夹的大小,包括子文件夹
            </summary>
            <param name="path"></param>
            <param name="baseSize"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Path.Move(System.String,System.String,System.Int32@,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            移动文件夹
            </summary>
            <param name="path">要移动的文件夹路径</param>
            <param name="toPath">要移动到文件夹的路径,注意,不包含文件夹名</param>
            <param name="errorCode">如果返回false的原因,//1:源路径不存在	//2:目的路径不存在	//3:目的路径中存在指定的文件名,切不允许追加,和不允许自动重命名//4:自定义文件夹名中包含不允许在路径中使用的字符//6:源路径并非一个可以解释的路径地址//7:目的路径中并非一个可以解释的路径地址</param>
            <param name="autoAppend">如果有相同文件夹,是否对文件夹内的文件追加,是否追加,优先判断</param>
            <param name="appendOption">如果进行追加,相同文件夹的处理情况,:0放弃移动,1替换,2自动重命名新的,3自动重命名旧的</param>
            <param name="renameNewFolder">在有相同文件夹存在时,并采用自动重命名时候,是否重命名新要增加的文件夹,false表示重命名旧文件夹</param>
            <param name="isExistsAutoRename">当有相同文件夹存在是,是否采用自动重命名</param>
            <param name="newName">为新的文件夹指定新的文件夹名</param>
            <returns></returns>
        </member>
        <member name="T:YJT.PersonIDCard">
            <summary>
            中国身份真验证
            </summary>
        </member>
        <member name="M:YJT.PersonIDCard.CreateRandomId(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            生成一个身份证号
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="male"></param>
            <param name="isl2"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.PhoneCommon">
            <summary>
            有关手机操作相关功能,阿里云的短信接口,在阿里云模块中.
            </summary>
        </member>
        <member name="T:YJT.PhoneCommon.PhoneRegion_Class">
            <summary>
            用于返回电话号码归属地信息
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.areacode">
            <summary>
            区号
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.zip">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.company">
            <summary>
            运营商
            </summary>
        </member>
        <member name="P:YJT.PhoneCommon.PhoneRegion_Class.card">
            <summary>
            保留内容,一直为空
            </summary>
        </member>
        <member name="M:YJT.PhoneCommon.VerificationPhoneRegion(System.String,System.String)">
            <summary>
            验证手机号码归属地
            </summary>
            <param name="phoneNum">验证的电话号码,或前7为</param>
            <param name="apiKey">接口Key,e8757dd6899c62e719e1ea34f005e41c</param>
            <returns></returns>
        </member>
        <member name="M:YJT.PhoneCommon.IsPhoneNumber(System.String)">
            <summary>
            验证字符串内容是否为手机号(中国手机号,不包含+86)
            </summary>
            <param name="phoneNum"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Print.FastReport">
            <summary>
            利用FastReprt打印
            </summary>
        </member>
        <member name="M:YJT.Print.FastReport.AddValue(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.RemoveValue(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.AddDataTable(System.String,System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.AddMod``1(``0)">
            <summary>
            通过反射,为模型中的可读属性进行赋值,会有NULL值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.RemoveDataTable(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.#ctor(System.Action{System.Object})">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YJT.Print.FastReport.LoadPrintFrx(System.String)">
            <summary>
            读取Frx打印方案
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:YJT.Print.FastReport.LoadPrintFrx(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:YJT.Print.FastReport.Design(System.String)">
            <summary>
            打印设计
            </summary>
        </member>
        <member name="M:YJT.Print.FastReport.Print(System.Boolean,System.String,System.Object)">
            <summary>
            直接打印
            </summary>
            <param name="showDialog"></param>
            <param name="printerName"></param>
        </member>
        <member name="M:YJT.Print.FastReport.Show(System.Boolean,System.String)">
            <summary>
            打印预览
            </summary>
        </member>
        <member name="M:YJT.Print.FastReport.GetPrints">
            <summary>
            获取当前机器上打印机列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Print.FastReport.GetDefaultPrinter">
            <summary>
            获取默认打印机
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.Properties.Resource1">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:YJT.Properties.Resource1.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YJT.Properties.Resource1.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:YJT.Properties.Resource1.DefaultNotifyICON">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:YJT.Properties.Resource1.xmind_xmp">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="T:YJT.Serialize">
            <summary>
            序列化成二进制对象相关
            </summary>
        </member>
        <member name="M:YJT.Serialize.EnSerialize(System.Object)">
            <summary>
            把对象序列化成byte数组对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Serialize.UEnSerialize(System.Byte[])">
            <summary>
            把byte数组反序列化成对象
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:YJT.Sound.TTSMicrosoft._queue">
            <summary>
            文本,音频,暂停
            </summary>
        </member>
        <member name="M:YJT.Sound.TTSMicrosoft.Close">
            <summary>
            关闭当前的线程,结束hand对象,终端队列
            </summary>
        </member>
        <member name="M:YJT.Sound.TTSMicrosoft.Speak(System.String,System.Int32,System.Int32,System.Boolean,System.String,System.Speech.Synthesis.PromptBreak,System.Int32)">
            <summary>
            使用主声卡朗读文字
            </summary>
            <param name="msg">要朗读的内容&lt;spause&gt;表示停顿</param>
            <param name="rate">语速,-10 到 10</param>
            <param name="volume">音量 0 到 100</param>
            <param name="isSyn">是否采用异步</param>
            <param name="filePath">文本前缀wav</param>
            <param name="pb">暂停时长</param>
            <param name="nuberMode">0直接朗读,1中文朗读</param>
        </member>
        <member name="M:YJT.Sound.ASRMicrosoft.SpeechRecognition(System.String)">
            <summary>
            根据WAV文件返回识别到的文本
            </summary>
            <param name="filePathWav">WAV</param>
            <returns></returns>
        </member>
        <member name="T:YJT.StaticResources">
            <summary>
            静态资源,随时随地访问对象
            </summary>
        </member>
        <member name="F:YJT.StaticResources.strList">
            <summary>
            用于调试输出时候使用,没有什么用,主要目的就是为了使用简单
            </summary>
        </member>
        <member name="M:YJT.StaticResources.Add(System.String,System.Object,System.Boolean)">
            <summary>
            全部为object对象,不可更改对象,可通过获取改变引用的内部对象
            </summary>
            <param name="key">资源名</param>
            <param name="value">资源值</param>
            <param name="isOverwrite">如果存在是否替换原始对象</param>
            <returns></returns>
        </member>
        <member name="M:YJT.StaticResources.IsContain(System.String)">
            <summary>
            判断资源是否存在
            </summary>
            <param name="key">资源名</param>
            <returns></returns>
        </member>
        <member name="M:YJT.StaticResources.Get``1(System.String)">
            <summary>
            通过强转把资源转换为需要的对象,不成功返回此对象的默认值
            </summary>
            <typeparam name="C1"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.StaticResources.GetObject(System.String)">
            <summary>
            直接返回资源
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.StaticResources.Remove(System.String)">
            <summary>
            删除一个资源
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.StaticResources.Item(System.String)">
            <summary>
            使用索引器,根据资源名获取对象object
            </summary>
            <param name="key">资源名</param>
            <returns>object</returns>
        </member>
        <member name="T:YJT.Text.ChinesePack">
            <summary>
            中文拼音处理
            </summary>
        </member>
        <member name="M:YJT.Text.ChinesePack.Init">
            <summary>
            初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.ChinesePack.ChsToPinYin(System.String)">
            <summary>
            中文转拼音 
            </summary>
            <param name="chsString"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.ChinesePack.ChsToPinYinZJM(System.String)">
            <summary>
            中文转拼音助记码
            </summary>
            <param name="chsString"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Text.EnumCharType">
            <summary>
            枚举字符类型,判断是英文还是数字
            </summary>
        </member>
        <member name="F:YJT.Text.EnumCharType.英文">
            <summary>
            英文字符
            </summary>
        </member>
        <member name="F:YJT.Text.EnumCharType.数字">
            <summary>
            数字字符
            </summary>
        </member>
        <member name="F:YJT.Text.EnumCharType.其他">
            <summary>
            中文或其他符号字符
            </summary>
        </member>
        <member name="T:YJT.Text.Verification">
            <summary>
            验证字符串相关类
            </summary>
        </member>
        <member name="M:YJT.Text.Verification.IsNullOrEmpty(System.String,System.Boolean,System.Boolean,System.String[])">
            <summary>
            验证字符串是否为空,或是没有长度,返回   false:表示有内容
            </summary>
            <param name="str"></param>
            <param name="ignoreNormal">是否忽略一般控制符包含</param>
            <param name="ignoreTrim">是否预先去除前后空格</param>
            <param name="ignoreStrs">忽略掉的字符串,全部调换掉如果为空返回TRUE</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsNotNullOrEmpty(System.String,System.Boolean,System.Boolean,System.String[])">
            <summary>
            验证字符串是否有内容
            </summary>
            <param name="str"></param>
            <param name="ignoreTrim">true表示使用trim预处理</param>
            <param name="ignoreNormal">true表示预先去除tab和回车</param>
            <param name="ignoreStrs">特殊忽略</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsEqualsEx(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            返回两个字符串是否相等,null,"",仅仅声明,多空格,都表示无数据,
            多空格转换为1个空格,前缀和后缀空格无效去除
            true 表示内容一样
            </summary>
            <param name="a">字符串1</param>
            <param name="b">字符串2</param>
            <param name="DistinguishUpperLower">是否忽略大小写</param>
            <param name="IgnoreCaseTrim">是否忽略前后空格</param>
            <returns>返回内容是否一致,注意介绍</returns>
        </member>
        <member name="M:YJT.Text.Verification.IsEqual(System.String,System.String)">
            <summary>
            判断两个字符串是否相等,不格式化,直接判断,原值比较
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsRightLike(System.String,System.String)">
            <summary>
            判断是否右like
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsLeftLike(System.String,System.String)">
            <summary>
            判断是否左like
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsContain(System.String,System.String)">
            <summary>
            判断是否左右like
            </summary>
            <param name="str">原字符串</param>
            <param name="key">要查找的子串</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.FunEnumGetCharType(System.Char)">
            <summary>
            获取字符类型
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.FunSplitStrByType(System.String,System.Int32)">
            <summary>
            按要求分割指定内容
            </summary>
            <param name="str"></param>
            <param name="flag">0,返回数字分组,1=返回英文分组,2=返回中文分组</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.FunJustGetStr(System.String,System.Int32)">
            <summary>
            获取字符串中相应的数据,如只要数字,只要英文,只要中文,数字英文等
            </summary>
            <param name="flag">0不整理,全部,1仅数字,2仅英文,3仅中文,5数字英文,6数字中文,7英文中文,8数字英文中文</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsInt(System.String)">
            <summary>
            判断是否为INT类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsLong(System.String)">
            <summary>
            判断字符串是否为LONG型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsNotInt(System.String)">
            <summary>
            判断是否不为INT类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsDouble(System.String)">
            <summary>
            判断字符串是否可以转换为DOUBLE
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsNotDouble(System.String)">
            <summary>
            判断字符串是否不可以转换为DOUBLE
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsDate(System.String@,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsIn(System.String,System.Boolean,System.String[])">
            <summary>
            判断字符串是否在列表中
            </summary>
            <param name="str"></param>
            <param name="DistinguishUpperLower"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsLikeIn(System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            判断str中是否包含subChars中的某个单词,如果存在,返回true;
            </summary>
            <param name="str"></param>
            <param name="subChars"></param>
            <param name="DistinguishUpperLower"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Verification.IsSimilarity(System.String,System.String,System.Double,System.Boolean,System.Int32@,System.Int32@,System.Double@)">
            <summary>
            比较两个字符串是否相似
            </summary>
            <param name="a">第一个字符串</param>
            <param name="b">第二个字符串</param>
            <param name="degree">大于此值返回True</param>
            <param name="direction">0两个字符串长度一样,1用A比较B,2用B比较A</param>
            <param name="count">匹配的个数</param>
            <param name="compareDegree">实际匹配成功比例</param>
            <param name="isOrder">匹配时候是否按照匹配原则的顺序,就是说,如果匹配成功一个字符以后,下一个字符不再向前查找</param>
            <returns></returns>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.KeyA">
            <summary>
            A的Key
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.KeyB">
            <summary>
            B的Key
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.ValueA">
            <summary>
            A的值
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.ValueB">
            <summary>
            B的值
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.Direction">
            <summary>
            匹配方式,左右
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.Count">
            <summary>
            匹配成功的字符数
            </summary>
        </member>
        <member name="P:YJT.Text.Verification.SimilarityRes.CompareDegree">
            <summary>
            比较后的比例
            </summary>
        </member>
        <member name="M:YJT.Text.Verification.IsSimilarityDic(System.Collections.Generic.Dictionary{System.String,System.String[]},System.Collections.Generic.Dictionary{System.String,System.String[]},System.Double,System.Boolean,System.Boolean)">
            <summary>
            比较两个集合对比
            </summary>
            <param name="a">要求必须有索引key,和string[1]的对比,如果不需要对比,哪就赋值为""</param>
            <param name="b"></param>
            <param name="degree"></param>
            <param name="isOrder"></param>
            <param name="isOnly"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Text.Format">
            <summary>
            字符串格式化相关类
            </summary>
        </member>
        <member name="M:YJT.Text.Format.RemoveChars(System.String,YJT.Text.Format.EnumCharDirection,System.String)">
            <summary>
            根据chars传输的字符串,移除这个所在开始或末尾的部分,只移除一位
            </summary>
            <param name="str"></param>
            <param name="dir"></param>
            <param name="chars"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.RemoveChar(System.String,YJT.Text.Format.EnumCharDirection,System.Int32)">
            <summary>
            删除字符串中某个位置,前,或者后
            </summary>
            <param name="str"></param>
            <param name="dir"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.Substring(System.String,System.Int32,System.Int32)">
            <summary>
            截取字符串,从0起
            </summary>
            <param name="str"></param>
            <param name="start">从0起</param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.Trim(System.String,System.Boolean,System.String[])">
            <summary>
            去掉前后的无效的字符,如果字符为空返回空
            </summary>
            <param name="str"></param>
            <param name="removeNormal">去除tab回车</param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.RemoveInvalidChar(System.String,System.String[])">
            <summary>
            去掉无用的字符,
            双空格:为单空格
            empty与null :""
            tab字符转换为空格
            去除前缀和尾缀空格
            回车,换行,转换为空格
            </summary>
            <param name="str">混乱的字符串</param>
            <param name="paras">可选,额外指定不允许的字符串,此字符串为去掉,并非空格</param>
            <returns>清晰的字符串</returns>
        </member>
        <member name="M:YJT.Text.Format.filterSensitiveHtmlKeyword(System.String,System.Int32)">
            <summary>
            替换用户提交的敏感字符,html相关
            </summary>
            <param name="str"></param>
            <param name="type">模式,0进行编码,其他解码</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.FunStrHideChar(System.String,System.Int32,System.Int32,System.Char)">
            <summary>
            隐藏部分字符,比如13*****3357
            </summary>
            <param name="str"></param>
            <param name="leftNum"></param>
            <param name="rightNum"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.FunStrIsNull(System.String,System.String[])">
            <summary>
            字符串全部为空,返回默认,否则返回不为空的字符串
            </summary>
            <param name="retVal">为空的默认值</param>
            <param name="val">哪个不为空,返回哪个,都为空或为null,返回默认值</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.IsNullStr(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            返回字符串,如果字符串为null,返回默认值
            </summary>
            <param name="str"></param>
            <param name="defaultStr"></param>
            <param name="isTrim"></param>
            <param name="isResRemoveTrim"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Format.SplitStrByCharLen(System.String,System.Int32)">
            <summary>
            分割字符串,根据字符串的长度
            </summary>
            <param name="a"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Text.CarryOperation">
            <summary>
            对象转16进制字符串或16进制形式字符串转对象的操作
            </summary>
        </member>
        <member name="M:YJT.Text.CarryOperation.FunStrGet16(System.String,System.String)">
            <summary>
            返回16进制字符串,不包含-
            </summary>
            <param name="s"></param>
            <param name="strEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.CarryOperation.FunStrGet16(System.Double,System.String)">
            <summary>
            把字数double转换成16进制形式的字符串
            </summary>
            <param name="s"></param>
            <param name="strEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.CarryOperation.FunStrGet16(System.Int32,System.String)">
            <summary>
            把int型数据转换成16进制形式的字符串
            </summary>
            <param name="s"></param>
            <param name="strEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.CarryOperation.FunStrGetStrBy16Str``1(System.String,System.String)">
            <summary>
            把16进制的字符串转换为原形对象,范型表示原值类型和返回的类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <param name="strEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.Text.ClassCreateText">
            <summary>
            创建字符串相关
            </summary>
        </member>
        <member name="M:YJT.Text.ClassCreateText.FunStrCreateNumberStr(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            创建随机数字字符串
            </summary>
            <param name="length">随机字符长度</param>
            <param name="excludeNum">排除的数字,只允许包含个位</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.ClassCreateText.FunStrCombinationDanjbh(System.String,System.String,System.Int32,System.Char)">
            <summary>
            生成指定长度的单据编号
            </summary>
            <param name="djFront">单据前缀</param>
            <param name="djNum">单据编号</param>
            <param name="len">单据总长度</param>
            <param name="supplementCh">补充字符</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Common.addCharLeftRight(System.String,System.String)">
            <summary>
            在字符串的左右进行包裹处理
            </summary>
            <param name="stro"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.Common.RandomStr``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            随机获取字符串组
            </summary>
            <param name="lsold"></param>
            <param name="count">要多少个</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.ExtName.RemoveDbVarcharInvalid(System.String,System.Boolean)">
            <summary>
            仅限于sql拼接时候,对字符串去除前导空格,后导空格,单引号
            </summary>
            <param name="str">字符串</param>
            <param name="keepSingleQuote">是否保留单引号为两个单引号</param>
            <returns></returns>
        </member>
        <member name="M:YJT.Text.ExtName.YjtSubString(System.String,System.Int32,System.Int32)">
            <summary>
            截取字符串
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.ValuePara.ComplexValue.MyList`1">
            <summary>
            重载ToString的list,需要对Text进行赋值
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:YJT.WeChar.WeCharSmallApp">
            <summary>
            相关微信的所有
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeCharPublicAAAA">
            <summary>
            微信公众号相关
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.Token">
            <summary>
            公众号设置的Token自定义密文
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.Appid">
            <summary>
            公众号的Appid
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.MchApiKey">
            <summary>
            设置商户开发APIkey
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.MchId">
            <summary>
            设置商户ID
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.CertFilePath">
            <summary>
            设置商户证书所在文件路径(pkcs12)p12类型文件,采用x.509算法的证书
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.CertPwd">
            <summary>
            设置商户证书安装密码
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.#ctor(System.String,System.String,System.String)">
            <summary>
            构造对象
            </summary>
            <param name="token"></param>
            <param name="appid"></param>
            <param name="secret"></param>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.Init(System.String,System.String,System.String)">
            <summary>
            初始化微信公众号
            </summary>
            <param name="token"></param>
            <param name="appid"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.VerificationWxConnection(System.Web.HttpContext)">
            <summary>
            验证微信接入
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.MenuSetting(System.String)">
            <summary>
            设置菜单
            </summary>
            <param name="menuData"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.GetAccessToken(System.Boolean)">
            <summary>
            获取AccessToken
            </summary>
            <param name="isforce">是否强制刷新,true表示必须从服务器上获取</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.GetJaspTicketToken(System.Boolean)">
            <summary>
            获取用于网页调用jasp的TicketToken值
            </summary>
            <param name="isforce"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeCharPublicAAAA.JsapiObj">
            <summary>
            用于生成页面调用jsapi验签的对象数据
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.noncestr">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.jsapi_ticket">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.url">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.appId">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.JsapiObj.signature">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.GetJsApiInfo(System.String)">
            <summary>
            获取页面用于检查签名jsapi的对象
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.GetUserOpenId(System.String,System.Boolean)">
            <summary>
            获取页面用户来访者的openid
            </summary>
            <param name="pageUserCode"></param>
            <param name="forceExec"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.getAllFlowerList(System.Int32)">
            <summary>
            拉取公众号中已经关注的所有人员
            </summary>
            <param name="pageCount">0表示所有,大于0表示只拉取某列</param>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeCharPublicAAAA.WxUserInfo">
            <summary>
            微信用户的model
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Subscribe">
            <summary>
            是否关注
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Openid">
            <summary>
            用户唯一标志
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Language">
            <summary>
            使用语言
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Headimgurl">
            <summary>
            头像路径
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Subscribe_time">
            <summary>
            关注的日期//时间戳
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.Unionid">
            <summary>
            只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.remark">
            <summary>
            公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.groupid">
            <summary>
            用户所在的分组ID（暂时兼容用户分组旧接口）
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.tagid_list">
            <summary>
            用户被打上的标签ID列表
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.subscribe_scene">
            <summary>
            返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENEPROFILE LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_OTHERS 其他
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.qr_scene">
            <summary>
            二维码扫码场景（开发者自定义）
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeCharPublicAAAA.WxUserInfo.qr_scene_str">
            <summary>
            二维码扫码场景描述（开发者自定义）
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.WxGetUserInfo(System.String)">
            <summary>
            根据用户的openid获取用户的详细信息
            </summary>
            <param name="openid"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.SendTemplateMessage(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}},System.String,System.String,System.String)">
            <summary>
            发送模板消息
            </summary>
            <param name="toUserOpenid">openId</param>
            <param name="msgTemplate">消息模板ID</param>
            <param name="msgTemplateData">模板填坑key=坑,value=(key=value或color,value=文本或#xxxxx)</param>
            <param name="url">可选,跳转的网址http://xxx.xxx/xxx.xxx</param>
            <param name="wxSmallAppId">可选,跳转小程序的appid</param>
            <param name="wxSmalljumpPage">跳转小程序的路径</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.CreateSignStr(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            生成用于微信发送Singn签名的信息,
            </summary>
            <param name="collection"></param>
            <param name="appStr">这是微信要求的,一个最后面一般是商户平台key,一般是内容是,"key=" + ApiKey</param>
            <param name="encodeType">md5 或者 sha1</param>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType">
            <summary>
            用于企业发送红包时候标记的场景类别,对应字段scene_id的,需要进行转换
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.商品促销">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.抽奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.虚拟物品兑奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.企业内部福利">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.渠道分润">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.保险回馈">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.彩票派奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType.税务刮奖">
            <summary>
            
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.Convertenum_ReadPackSceneType(YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType)">
            <summary>
            转换场景id枚举值所对应提交给微信平台json的数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.BussinessSendRedPack(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,YJT.WeChar.WeCharPublicAAAA.enum_ReadPackSceneType,System.String)">
            <summary>
            企业向用户发送红包,以,需要先指定商户号
            </summary>
            <param name="mch_billno">商户订单号（每个订单号必须唯一。取值范围：0~9，a~z，A~Z）接口根据商户订单号支持重入，如出现超时可再调用。10000098201411111234567890</param>
            <param name="send_name">红包发送者名称注意：敏感词会被转义成字符* 天虹百货</param>
            <param name="re_openid">接受红包的用户openid为用户在wxappid下的唯一标识 	oxTWIuGaIt6gTKsQRLau2M0yL16E</param>
            <param name="total_amount">付款金额，单位分 1000</param>
            <param name="wishing">红包祝福语	注意：敏感词会被转义成字符* 感谢您参加猜灯谜活动</param>
            <param name="client_ip">调用接口的机器(服务器)Ip地址 	192.168.0.1</param>
            <param name="act_name">活动名称注意：敏感词会被转义成字符* 猜灯谜抢红包活动</param>
            <param name="remark">备注信息 猜越多得越多，快来抢</param>
            <param name="scene_id">场景id 本接口必传,发放红包使用场景，红包金额大于200或者小于1元时必传</param>
            <param name="risk_info">活动信息 可为空 posttime%3d123123412%26clientversion%3d234134%26mobile%3d122344545%26deviceid%3dIOS  posttime:用户操作的时间戳 mobile:业务系统账号的手机号，国家代码-手机号。不需要+号 deviceid :mac 地址或者设备唯一标识 clientversion :用户操作的客户端版本 把值为非空的信息用key = value进行拼接，再进行urlencode  urlencode(posttime= xx &amp; mobile = xx &amp; deviceid = xx)</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeCharPublicAAAA.GetTimeStamp">
            <summary>
            获取微信所需要的时间戳TimeStamp值
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class">
            <summary>
            公众号对象
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._strToken">
            <summary>
            定义的token 例:qpmzatao
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._appId">
            <summary>
            公众号的AppId 例:wxcba04a85d35c62e0
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._secret">
            <summary>
            公众号的AppSecret 例:2a1abd40c50a39f4123f81c09197f342
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._wxNumber">
            <summary>
            公众号的编号 例:gh_0d93ec412689
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._accessTokenValue">
            <summary>
            最后一次获取到的AccessToken号码 512位,例如:21_BwSQx3JHum0rQAzUmHcEO5_Fo2cnzLsSBguu9jxJWGy-QkeaaItXfRHmN-aUGGHqOizu4nKtZw1LD3m0CDbSGcUKZRFhY0g2x1qiccWCYFpBXTG_Fst2a2F8F-OLycjAqoaLduN3GC8k2mtiLQJhADAZEX
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._accessTokenDateTime">
            <summary>
            上次获取到AccessToken的时间
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class._accessInvalidSecond">
            <summary>
            此次AccessToken号的失效秒数 默认7200
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.wxList">
            <summary>
            静态对象,字典对象,用于存储构建了多少个微信公众号对象,以AppId进行区分,如果有相同的公众号对象,则不再构造,直接返回,从而保留了各种委托值,
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.EventHandleObj">
            <summary>
            
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.MchApiKey">
            <summary>
            设置商户开发APIkey
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.MchId">
            <summary>
            设置商户ID
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.CertFilePath">
            <summary>
            设置商户证书所在文件路径(pkcs12)p12类型文件,采用x.509算法的证书
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.CertPwd">
            <summary>
            设置商户证书安装密码
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.Init(System.String,System.String,System.String,System.String)">
            <summary>
            构造一个微信对象,如果已经存在相同的Appid,则不创建,直接返回内存对象
            </summary>
            <param name="strToken">定义的token 例:qpmzatao</param>
            <param name="appId">公众号的AppId 例:wxcba04a85d35c62e0</param>
            <param name="secret">公众号的AppSecret 例:2a1abd40c50a39f4123f81c09197f342</param>
            <param name="wxNumber">公众号的编号 例:gh_0d93ec412689</param>
            <returns>返回微信公众号对象</returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.GetTimeStamp">
            <summary>
            获取微信所需要的时间戳TimeStamp值
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.GetJsApiInfo(System.String)">
            <summary>
            获取页面用于检查签名jsapi的对象
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.GetJaspTicketToken(System.Boolean)">
            <summary>
            获取用于网页调用jasp的TicketToken值
            </summary>
            <param name="isforce"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.DateTimeToInt(System.DateTime)">
            <summary>
            把日期转换为int型的字符串(秒)
            </summary>
            <param name="dtDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.IntToDateTime(System.String)">
            <summary>
            把int型字符串转日期(根据秒)
            </summary>
            <param name="intSecond"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.GetAccessToken(System.Boolean)">
            <summary>
            获取AccessToken
            </summary>
            <param name="isforce">是否强制刷新,true表示必须从服务器上获取</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxGetUserInfo(System.String)">
            <summary>
            根据用户的openid获取用户的详细信息
            </summary>
            <param name="openid"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.GetUserOpenId(System.String,System.Boolean)">
            <summary>
            获取页面用户来访者的openid
            </summary>
            <param name="pageUserCode"></param>
            <param name="forceExec"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.CreateSignStr(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            生成用于微信发送Singn签名的信息,
            </summary>
            <param name="collection"></param>
            <param name="appStr">这是微信要求的,一个最后面一般是商户平台key,一般是内容是,"key=" + ApiKey</param>
            <param name="encodeType">md5 或者 sha1</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.Convertenum_ReadPackSceneType(YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType)">
            <summary>
            转换场景id枚举值所对应提交给微信平台json的数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenAccess(System.Web.HttpContext,System.Boolean)">
            <summary>
            监听微信服务器发送过来的数据,包含验证接入,或相应用户在公众号中的操作,如点按钮,发信息等
            </summary>
            <param name="context">请求的上下文</param>
            <param name="isVerificationConnection">是否验证连接,大多数为true</param>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.BussinessSendRedPack(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType,System.String)">
            <summary>
            企业向用户发送红包,以,需要先指定商户号
            </summary>
            <param name="mch_billno">商户订单号（每个订单号必须唯一。取值范围：0~9，a~z，A~Z）接口根据商户订单号支持重入，如出现超时可再调用。10000098201411111234567890</param>
            <param name="send_name">红包发送者名称注意：敏感词会被转义成字符* 天虹百货</param>
            <param name="re_openid">接受红包的用户openid为用户在wxappid下的唯一标识 	oxTWIuGaIt6gTKsQRLau2M0yL16E</param>
            <param name="total_amount">付款金额，单位分 1000</param>
            <param name="wishing">红包祝福语	注意：敏感词会被转义成字符* 感谢您参加猜灯谜活动</param>
            <param name="client_ip">调用接口的机器(服务器)Ip地址 	192.168.0.1</param>
            <param name="act_name">活动名称注意：敏感词会被转义成字符* 猜灯谜抢红包活动</param>
            <param name="remark">备注信息 猜越多得越多，快来抢</param>
            <param name="scene_id">场景id 本接口必传,发放红包使用场景，红包金额大于200或者小于1元时必传</param>
            <param name="risk_info">活动信息 可为空 posttime%3d123123412%26clientversion%3d234134%26mobile%3d122344545%26deviceid%3dIOS  posttime:用户操作的时间戳 mobile:业务系统账号的手机号，国家代码-手机号。不需要+号 deviceid :mac 地址或者设备唯一标识 clientversion :用户操作的客户端版本 把值为非空的信息用key = value进行拼接，再进行urlencode  urlencode(posttime= xx &amp; mobile = xx &amp; deviceid = xx)</param>
            <returns></returns>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.MenuSetting(System.String)">
            <summary>
            设置菜单
            </summary>
            <param name="menuData"></param>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType">
            <summary>
            用于企业发送红包时候标记的场景类别,对应字段scene_id的,需要进行转换
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.商品促销">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.抽奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.虚拟物品兑奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.企业内部福利">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.渠道分润">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.保险回馈">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.彩票派奖">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.enum_ReadPackSceneType.税务刮奖">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj">
            <summary>
            用于生成页面调用jsapi验签的对象数据
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.noncestr">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.jsapi_ticket">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.url">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.appId">
            <summary>
            
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.JsapiObj.signature">
            <summary>
            
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo">
            <summary>
            微信用户的model
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Subscribe">
            <summary>
            是否关注
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Openid">
            <summary>
            用户唯一标志
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Language">
            <summary>
            使用语言
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Headimgurl">
            <summary>
            头像路径
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Subscribe_time">
            <summary>
            关注的日期//时间戳
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.Unionid">
            <summary>
            只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.remark">
            <summary>
            公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.groupid">
            <summary>
            用户所在的分组ID（暂时兼容用户分组旧接口）
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.tagid_list">
            <summary>
            用户被打上的标签ID列表
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.subscribe_scene">
            <summary>
            返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENEPROFILE LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_OTHERS 其他
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.qr_scene">
            <summary>
            二维码扫码场景（开发者自定义）
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.WxUserInfo.qr_scene_str">
            <summary>
            二维码扫码场景描述（开发者自定义）
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class">
            <summary>
            此类用于接入监听,处理微信服务器发送过来的事件响应
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.被动回复">
            <summary>
            用于用户被动回复的基类,主要用户调用时使用此对象实现多态
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.被动回复.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本">
            <summary>
            回复文本信息
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本.ToUserName">
            <summary>
            发给谁
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本.FromUserName">
            <summary>
            哪个公众号
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本.CreateTime">
            <summary>
            什么时间发
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本.Content">
            <summary>
            发的内容
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复文本.ToString">
            <summary>
            生成对应的xml文件
            </summary>
            <returns></returns>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音">
            <summary>
            回复语音信息
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音.ToUserName">
            <summary>
            发给谁
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音.FromUserName">
            <summary>
            哪个公众号
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音.CreateTime">
            <summary>
            什么时间发
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音.media_id">
            <summary>
            素材id
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复语音.ToString">
            <summary>
            生成对应的xml文件
            </summary>
            <returns></returns>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复图文.ToUserName">
            <summary>
            发给谁
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复图文.FromUserName">
            <summary>
            哪个公众号
            </summary>
        </member>
        <member name="P:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复图文.CreateTime">
            <summary>
            什么时间发
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复图文.ArticleCount">
            <summary>
            素材id
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.Res被动回复图文.ToString">
            <summary>
            生成对应的xml文件
            </summary>
            <returns></returns>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.文本消息处理">
            <summary>
            被动回复=文本消息处理(toUserName,FromUserName,CreateTime,Content,MsgId)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.取消关注处理">
            <summary>
            被动回复=取消关注处理(toUserName,FromUserName,CreateTime)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.关注处理">
            <summary>
            被动回复=关注处理(toUserName,FromUserName,CreateTime)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.扫码处理">
            <summary>
            被动回复=扫码处理(toUserName,FromUserName,CreateTime,EventKey,Ticket,是否刚关注,关注处理的结果字符串)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.发送位置处理">
            <summary>
            被动回复=发送位置处理(toUserName,FromUserName,CreateTime,维度,经度,zoom,位置文本,msgId)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.消息位置处理">
            <summary>
            被动回复=发送位置处理(toUserName,FromUserName,CreateTime,维度,经度,精度)
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.ListenHandle_class.语音请求处理">
            <summary>
            被动回复=语音请求处理(toUserName,FromUserName,CreateTime,mediaId,Format,RecognitionTxt,MsgId)
            </summary>
        </member>
        <member name="T:YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum">
            <summary>
            素材类型
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum.image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum.voice">
            <summary>
            语音
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum.video">
            <summary>
            视频
            </summary>
        </member>
        <member name="F:YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum.thumb">
            <summary>
            缩略图
            </summary>
        </member>
        <member name="M:YJT.WeChar.WeChar2Ext.WeCharPublic_class.上传临时素材(System.Byte[],YJT.WeChar.WeChar2Ext.WeCharPublic_class.素材类型_enum,System.String)">
            <summary>
            上传临时素材
            </summary>
            <returns>返回素材ID</returns>
        </member>
        <member name="T:YJT.XmlExt">
            <summary>
            高级处理XML
            </summary>
        </member>
        <member name="T:YJT.XmlExt.XmlNode">
            <summary>
            存储一个xml节点
            </summary>
        </member>
        <member name="P:YJT.XmlExt.XmlNode.NodeName">
            <summary>
            节点名
            </summary>
        </member>
        <member name="P:YJT.XmlExt.XmlNode.SubNodesCount">
            <summary>
            子节点个数
            </summary>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="nodeName"></param>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.DeleteSubNode(YJT.XmlExt.XmlNode)">
            <summary>
            删除子节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.DeleteSubNode(System.String)">
            <summary>
            删除子节点
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.AppendNode(System.String,System.String,System.String,System.Boolean)">
            <summary>
            在当前节点下追加节点
            </summary>
            <param name="node"></param>
            <param name="value"></param>
            <param name="xmlns"></param>
            <param name="isShowSpace">如果为true表示必须保持键值对方式,否则可以以/结尾</param>
            <returns></returns>
        </member>
        <member name="M:YJT.XmlExt.XmlNode.CreateNode(System.String,YJT.XmlExt,System.String)">
            <summary>
            静态创建第一个节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="P:YJT.XmlExt.GetRootNode">
            <summary>
            获取根目录的TreeNode
            </summary>
        </member>
        <member name="M:YJT.XmlExt.#ctor(System.String)">
            <summary>
            通过xml文本构造xml对象
            </summary>
            <param name="xmlStr"></param>
        </member>
        <member name="M:YJT.XmlExt.#ctor(System.String,System.String)">
            <summary>
            构造一个空的xml对象
            </summary>
        </member>
        <member name="M:YJT.XmlExt.ToString">
            <summary>
            返回xml中的文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:YJT.XmlExt.ToString(System.Boolean)">
            <summary>
            格式化输出,
            </summary>
            <param name="formated">false 表示不格式化</param>
            <returns></returns>
        </member>
        <member name="T:YJT.XML">
            <summary>
            XML对象管理
            </summary>
        </member>
        <member name="M:YJT.XML.GetElementInnerText(System.Xml.XmlDocument,System.String,System.Boolean@)">
            <summary>
            根据一个xmlDoc文档获取内部的值,如果不存在返回空
            </summary>
            <param name="xmlDoc"></param>
            <param name="nodeName"></param>
            <param name="isok"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.XML.FunObjGetXmlObj(System.String)">
            <summary>
            创建一个XML对象,如果内容为空,则创建一个空的XML对象
            </summary>
            <param name="xmlStr"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.XML.FunStrGetXmlByKeyValueCollection(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            把键值对集合对象,转换为XML字符串
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.XML.FunDicGetNodesByNodeName(System.Xml.XmlDocument,System.String)">
            <summary>
            从XMLdocument对象中获取某一节点之下的所有成员,并转换为键值对对象
            </summary>
            <param name="xmldoc"></param>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:YJT.XML.FunStrSerializeToStr(System.Object,System.Boolean@,System.Int32@,System.String@,System.String,System.Boolean,System.Boolean,YJT.Json.EnumTimeFormat,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            ,
            </summary>
            <param name="obj"></param>
            <param name="isOk"></param>
            <param name="errCode"></param>
            <param name="errMsg"></param>
            <param name="encoding"></param>
            <param name="isNameSpace"></param>
            <param name="isFormat"></param>
            <param name="dateformat"></param>
            <param name="removeNull"></param>
            <param name="enumConverStr"></param>
            <param name="isFormatStr"></param>
            <returns></returns>
        </member>
    </members>
</doc>
